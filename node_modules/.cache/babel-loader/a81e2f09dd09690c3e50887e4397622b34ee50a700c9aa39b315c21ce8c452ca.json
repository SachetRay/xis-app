{"ast":null,"code":"import{useState,useEffect}from'react';import{transformUserData,storeTransformedData,getTransformedData}from'../utils/userDataTransformer';import{userData}from'../data/userData';export const useTransformedData=()=>{const[transformedData,setTransformedData]=useState(null);const[error,setError]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const loadData=async()=>{try{// Try to get cached data first\nlet data=getTransformedData();if(!data){// If no cached data, transform and store\ndata=transformUserData(userData);storeTransformedData(data);}setTransformedData(data);setError(null);}catch(err){setError(err instanceof Error?err.message:'Failed to transform data');console.error('Error transforming data:',err);}finally{setLoading(false);}};loadData();},[]);const refreshData=()=>{setLoading(true);const data=transformUserData(userData);storeTransformedData(data);setTransformedData(data);setLoading(false);};return{transformedData,error,loading,refreshData};};","map":{"version":3,"names":["useState","useEffect","transformUserData","storeTransformedData","getTransformedData","userData","useTransformedData","transformedData","setTransformedData","error","setError","loading","setLoading","loadData","data","err","Error","message","console","refreshData"],"sources":["/Users/sachet/Desktop/XIS/src/hooks/useTransformedData.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { TransformedUserData } from '../types/transformedUserData';\nimport { transformUserData, storeTransformedData, getTransformedData } from '../utils/userDataTransformer';\nimport { userData } from '../data/userData';\n\nexport const useTransformedData = () => {\n  const [transformedData, setTransformedData] = useState<TransformedUserData | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        // Try to get cached data first\n        let data = getTransformedData();\n        \n        if (!data) {\n          // If no cached data, transform and store\n          data = transformUserData(userData);\n          storeTransformedData(data);\n        }\n        \n        setTransformedData(data);\n        setError(null);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to transform data');\n        console.error('Error transforming data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  const refreshData = () => {\n    setLoading(true);\n    const data = transformUserData(userData);\n    storeTransformedData(data);\n    setTransformedData(data);\n    setLoading(false);\n  };\n\n  return {\n    transformedData,\n    error,\n    loading,\n    refreshData\n  };\n}; "],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,OAASC,iBAAiB,CAAEC,oBAAoB,CAAEC,kBAAkB,KAAQ,8BAA8B,CAC1G,OAASC,QAAQ,KAAQ,kBAAkB,CAE3C,MAAO,MAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CACtC,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGR,QAAQ,CAA6B,IAAI,CAAC,CACxF,KAAM,CAACS,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAgB,IAAI,CAAC,CACvD,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAI,CACF;AACA,GAAI,CAAAC,IAAI,CAAGV,kBAAkB,CAAC,CAAC,CAE/B,GAAI,CAACU,IAAI,CAAE,CACT;AACAA,IAAI,CAAGZ,iBAAiB,CAACG,QAAQ,CAAC,CAClCF,oBAAoB,CAACW,IAAI,CAAC,CAC5B,CAEAN,kBAAkB,CAACM,IAAI,CAAC,CACxBJ,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAE,MAAOK,GAAG,CAAE,CACZL,QAAQ,CAACK,GAAG,WAAY,CAAAC,KAAK,CAAGD,GAAG,CAACE,OAAO,CAAG,0BAA0B,CAAC,CACzEC,OAAO,CAACT,KAAK,CAAC,0BAA0B,CAAEM,GAAG,CAAC,CAChD,CAAC,OAAS,CACRH,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,QAAQ,CAAC,CAAC,CACZ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAM,WAAW,CAAGA,CAAA,GAAM,CACxBP,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAE,IAAI,CAAGZ,iBAAiB,CAACG,QAAQ,CAAC,CACxCF,oBAAoB,CAACW,IAAI,CAAC,CAC1BN,kBAAkB,CAACM,IAAI,CAAC,CACxBF,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAED,MAAO,CACLL,eAAe,CACfE,KAAK,CACLE,OAAO,CACPQ,WACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}