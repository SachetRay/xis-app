{"ast":null,"code":"var _jsxFileName = \"/Users/sachet/Desktop/XIS/src/components/DataWizard/DataWizard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, Typography, TextField, Paper, List, ListItem, ListItemIcon, ListItemText, alpha, Button, ToggleButtonGroup, ToggleButton, Chip, Divider, InputAdornment } from '@mui/material';\nimport FolderIcon from '@mui/icons-material/Folder';\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen';\nimport InsertDriveFileIcon from '@mui/icons-material/InsertDriveFile';\nimport SearchIcon from '@mui/icons-material/Search';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { useTheme } from '@mui/material/styles';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { userData } from '../../data/userData';\nimport { transformUserData } from '../../utils/userDataTransformer';\nimport { transformToTree } from '../../utils/treeTransform';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Dummy data for usage timeline chart\nconst generateUsageData = () => {\n  const data = [];\n  const today = new Date();\n  for (let i = 30; i >= 0; i--) {\n    const date = new Date(today);\n    date.setDate(date.getDate() - i);\n    data.push({\n      date: date.toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric'\n      }),\n      usage: Math.floor(Math.random() * 1000) + 500\n    });\n  }\n  return data;\n};\n\n// Dummy data for intermediate tables\nconst intermediateTables = [{\n  name: 'Raw_User_Data',\n  description: 'Raw user data collected from various sources',\n  rowCount: 1250000\n}, {\n  name: 'Processed_User_Profiles',\n  description: 'Processed and normalized user profiles',\n  rowCount: 980000\n}, {\n  name: 'User_Segments',\n  description: 'User segments based on behavior and attributes',\n  rowCount: 45000\n}, {\n  name: 'Final_User_Attributes',\n  description: 'Final user attributes used in applications',\n  rowCount: 750000\n}];\nconst DataWizard = () => {\n  _s();\n  const [tabValue, setTabValue] = useState(0);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isSearchExpanded, setIsSearchExpanded] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n  const searchInputRef = useRef(null);\n  const [columns, setColumns] = useState([{\n    items: transformToTree(transformUserData(userData)),\n    selectedItem: null\n  }]);\n  const [selectedDetails, setSelectedDetails] = useState(null);\n  const [animatingColumns, setAnimatingColumns] = useState([]);\n  const scrollContainerRef = useRef(null);\n  const detailsPathScrollRef = useRef(null);\n  const [selectedPathIndex, setSelectedPathIndex] = useState(null);\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const theme = useTheme();\n\n  // Handle URL parameters\n  useEffect(() => {\n    const path = searchParams.get('path');\n    const selected = searchParams.get('selected');\n    const expand = searchParams.get('expand') === 'true';\n    if (path || selected) {\n      const transformedData = transformUserData(userData);\n      const treeData = transformToTree(transformedData);\n      const pathArray = path ? path.split('/') : [];\n\n      // Reset columns and build the path\n      const newColumns = [];\n      let currentItems = treeData;\n      let selectedItem = null;\n\n      // Build columns for the path\n      for (const pathItem of pathArray) {\n        const columnItem = currentItems.find(item => item.name === pathItem);\n        if (columnItem) {\n          newColumns.push({\n            items: currentItems,\n            selectedItem: columnItem\n          });\n          currentItems = columnItem.children || [];\n        }\n      }\n\n      // If there's a selected item, find it in the current level\n      if (selected) {\n        const foundItem = currentItems.find(item => item.name === selected);\n        if (foundItem) {\n          var _selectedItem$childre;\n          selectedItem = foundItem;\n          // Add or update the last column with the selected item\n          if (newColumns.length > 0) {\n            newColumns[newColumns.length - 1] = {\n              items: currentItems,\n              selectedItem\n            };\n          } else {\n            newColumns.push({\n              items: currentItems,\n              selectedItem\n            });\n          }\n\n          // If expand is true and it's a folder, add its children\n          if (expand && selectedItem.type === 'folder' && (_selectedItem$childre = selectedItem.children) !== null && _selectedItem$childre !== void 0 && _selectedItem$childre.length) {\n            newColumns.push({\n              items: selectedItem.children,\n              selectedItem: null\n            });\n          }\n\n          // Set selected details with the full path\n          const fullPath = path ? [...pathArray, selected] : [selected];\n          const details = getItemDetails(selectedItem, fullPath);\n          setSelectedDetails(details);\n\n          // Log for debugging\n          console.log('Setting selected details:', {\n            name: selectedItem.name,\n            path: fullPath,\n            details\n          });\n        }\n      }\n      setColumns(newColumns);\n    }\n  }, [searchParams]);\n\n  // Add a debug effect to log when selectedDetails changes\n  useEffect(() => {\n    console.log('Selected details updated:', selectedDetails);\n  }, [selectedDetails]);\n\n  // Auto-scroll when new columns or path items are added\n  useEffect(() => {\n    if (scrollContainerRef.current) {\n      scrollContainerRef.current.scrollTo({\n        left: scrollContainerRef.current.scrollWidth,\n        behavior: 'smooth'\n      });\n    }\n    if (detailsPathScrollRef.current) {\n      detailsPathScrollRef.current.scrollTo({\n        left: detailsPathScrollRef.current.scrollWidth,\n        behavior: 'smooth'\n      });\n    }\n  }, [columns.length, selectedDetails === null || selectedDetails === void 0 ? void 0 : selectedDetails.path.length]);\n\n  // Add search functionality\n  useEffect(() => {\n    if (searchQuery.trim()) {\n      const transformedData = transformUserData(userData);\n      const results = searchInTree(transformToTree(transformedData), searchQuery.toLowerCase());\n      setSearchResults(results);\n    } else {\n      setSearchResults([]);\n    }\n  }, [searchQuery]);\n\n  // Focus search input when overlay opens\n  useEffect(() => {\n    if (isSearchExpanded && searchInputRef.current) {\n      // Small delay to ensure the overlay is rendered\n      setTimeout(() => {\n        var _searchInputRef$curre;\n        (_searchInputRef$curre = searchInputRef.current) === null || _searchInputRef$curre === void 0 ? void 0 : _searchInputRef$curre.focus();\n      }, 100);\n    }\n  }, [isSearchExpanded]);\n\n  // Effect to toggle body class for blur effect\n  useEffect(() => {\n    if (isSearchExpanded) {\n      document.body.classList.add('search-overlay-active');\n    } else {\n      document.body.classList.remove('search-overlay-active');\n    }\n    return () => {\n      document.body.classList.remove('search-overlay-active');\n    };\n  }, [isSearchExpanded]);\n\n  // Function to search in the tree structure\n  const searchInTree = (nodes, query) => {\n    let results = [];\n    for (const node of nodes) {\n      // Check if the current node matches\n      if (node.name.toLowerCase().includes(query)) {\n        results.push(node);\n      }\n\n      // If it's a folder, search in its children\n      if (node.type === 'folder' && node.children) {\n        const childResults = searchInTree(node.children, query);\n        results = [...results, ...childResults];\n      }\n    }\n    return results;\n  };\n\n  // Function to get the path to a node\n  const getPathToNode = (node, tree) => {\n    const findPath = (currentNode, targetNode, currentPath) => {\n      if (currentNode.name === targetNode.name) {\n        return [...currentPath, currentNode.name];\n      }\n      if (currentNode.type === 'folder' && currentNode.children) {\n        for (const child of currentNode.children) {\n          const path = findPath(child, targetNode, [...currentPath, currentNode.name]);\n          if (path) return path;\n        }\n      }\n      return null;\n    };\n    for (const rootNode of tree) {\n      const path = findPath(rootNode, node, []);\n      if (path) return path;\n    }\n    return [node.name];\n  };\n\n  // Function to navigate to a search result\n  const navigateToSearchResult = result => {\n    const transformedData = transformUserData(userData);\n    const path = getPathToNode(result, transformToTree(transformedData));\n\n    // Reset columns and build the path\n    const newColumns = [];\n    let currentItems = transformToTree(transformedData);\n    for (const pathItem of path) {\n      const columnItem = currentItems.find(item => item.name === pathItem);\n      if (columnItem) {\n        newColumns.push({\n          items: currentItems,\n          selectedItem: columnItem\n        });\n        currentItems = columnItem.children || [];\n      }\n    }\n    setColumns(newColumns);\n    setSelectedDetails(getItemDetails(result, path));\n    setIsSearchExpanded(false);\n  };\n  const handleNavigationChange = (_, newValue) => {\n    if (newValue !== null) {\n      setTabValue(newValue);\n    }\n  };\n  const navigationOptions = [{\n    label: 'Profile Attributes',\n    icon: /*#__PURE__*/_jsxDEV(PersonIcon, {\n      sx: {\n        fontSize: 18\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }, this),\n    description: 'User profile and identity attributes'\n  }, {\n    label: 'Experience Events',\n    icon: /*#__PURE__*/_jsxDEV(BarChartIcon, {\n      sx: {\n        fontSize: 18\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }, this),\n    description: 'User interaction and behavior events'\n  }, {\n    label: 'Lookup Attributes',\n    icon: /*#__PURE__*/_jsxDEV(SearchIcon, {\n      sx: {\n        fontSize: 18\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }, this),\n    description: 'Reference and lookup data attributes'\n  }];\n  const getItemDetails = (item, path) => {\n    const baseDetails = {\n      name: item.name,\n      value: item.value,\n      type: item.type,\n      path,\n      lastModified: new Date(Date.now() - Math.random() * 10000000000).toLocaleDateString(),\n      owner: ['Priya Shanmugan', 'John Smith', 'Sarah Chen', 'Mike Johnson'][Math.floor(Math.random() * 4)]\n    };\n\n    // Get the original path for XDM\n    const getOriginalPath = transformedPath => {\n      const pathMappings = {\n        // User Details - Identity\n        'userDetails/identity/firstName': 'person/name/firstname',\n        'userDetails/identity/lastName': 'person/name/lastname',\n        'userDetails/identity/countryCode': 'homeAddress/countryCode',\n        'userDetails/identity/userAccountCreationDate': 'adobeCorpnew/memberAccountGUID/userDetails/userAccountCreationDate',\n        'userDetails/identity/isAdobeEmployee': 'adobeCorpnew/isAdobeEmployee',\n        // User Details - Email\n        'userDetails/email/address': 'personalEmail/address',\n        'userDetails/email/emailDomain': 'adobeCorpnew/emailDomain',\n        'userDetails/email/hashedEmail': 'adobeCorpnew/hashedEmail',\n        'userDetails/email/emailValidFlag': 'adobeCorpnew/emailValidFlag',\n        // Email Marketing Permission\n        'emailMarketingPermission': 'personalEmail/optInOut',\n        'Email Marketing Permission': 'personalEmail/optInOut',\n        'emailMarketingPermission/val': 'personalEmail/optInOut/val',\n        'emailMarketingPermission/time': 'personalEmail/optInOut/time',\n        // Individual Entitlements\n        'individualEntitlements': 'adobeCorpnew/entitlements',\n        'Individual Entitlements': 'adobeCorpnew/entitlements',\n        'individualEntitlements/numberOfEntitledProducts': 'adobeCorpnew/entitlements/numberOfEntitledProducts',\n        // Team Entitlements\n        'teamEntitlements': 'adobeCorpnew/memberAccountGUID/contract',\n        'Team Entitlements': 'adobeCorpnew/memberAccountGUID/contract',\n        // Models and Scores\n        'modelsAndScores/overallScore': 'adobeCorpnew/memberAccountGUID/modelsAndScores/SKU_RANK',\n        'Models and Scores/Overall Score': 'adobeCorpnew/memberAccountGUID/modelsAndScores/SKU_RANK',\n        // Product Activity\n        'productActivity': 'adobeCorpnew/memberAccountGUID/productActivity',\n        'Product Activity': 'adobeCorpnew/memberAccountGUID/productActivity'\n      };\n      const transformedPathStr = transformedPath.join('/');\n\n      // Try exact match first\n      if (pathMappings[transformedPathStr]) {\n        return pathMappings[transformedPathStr];\n      }\n\n      // Find all parent paths that match\n      const matchingPaths = Object.entries(pathMappings).filter(([key]) => transformedPathStr.startsWith(key)).sort((a, b) => b[0].length - a[0].length); // Sort by length descending\n\n      if (matchingPaths.length > 0) {\n        // Use the longest matching path\n        const [matchingPath, originalPathPrefix] = matchingPaths[0];\n        // Get the remaining path segments\n        const remainingPath = transformedPathStr.slice(matchingPath.length);\n        // If there's a remaining path, append it to the original path\n        return remainingPath ? `${originalPathPrefix}${remainingPath}` : originalPathPrefix;\n      }\n\n      // If no mapping found, return the path as is\n      return transformedPathStr;\n    };\n    if (item.type === 'folder') {\n      const folderTypes = {\n        'Anonymous User': {\n          description: 'Contains attributes related to anonymous user tracking and identification.',\n          usageCount: 1247,\n          status: 'Active'\n        },\n        'Email Domain Properties': {\n          description: 'Email-related configurations and domain-specific settings.',\n          usageCount: 856,\n          status: 'Active'\n        },\n        'Member Account GUID': {\n          description: 'Global unique identifier management for member accounts.',\n          usageCount: 2341,\n          status: 'Active'\n        },\n        'System Computed Attributes': {\n          description: 'Automatically calculated and maintained system attributes.',\n          usageCount: 1589,\n          status: 'Active'\n        }\n      };\n      return {\n        ...baseDetails,\n        ...(folderTypes[item.name] || {\n          description: 'A collection of related attributes and configurations.',\n          usageCount: Math.floor(Math.random() * 2000) + 500,\n          status: Math.random() > 0.1 ? 'Active' : 'Deprecated'\n        })\n      };\n    }\n\n    // For files (attributes), include XDM path\n    return {\n      ...baseDetails,\n      description: getAttributeDescription(item.name),\n      status: Math.random() > 0.1 ? 'Active' : 'Deprecated',\n      dataType: typeof item.value,\n      xdmPath: `xdm:${getOriginalPath(path)}`\n    };\n  };\n  const handleItemClick = (item, columnIndex) => {\n    var _item$children;\n    const newColumns = columns.slice(0, columnIndex + 1);\n    newColumns[columnIndex] = {\n      ...newColumns[columnIndex],\n      selectedItem: item\n    };\n    if (item.type === 'folder' && (_item$children = item.children) !== null && _item$children !== void 0 && _item$children.length) {\n      setAnimatingColumns([...animatingColumns, columnIndex + 1]);\n      setTimeout(() => {\n        newColumns.push({\n          items: item.children || [],\n          selectedItem: null\n        });\n        setColumns(newColumns);\n      }, 150);\n    } else {\n      setColumns(newColumns);\n    }\n\n    // Calculate the path from columns only\n    const path = newColumns.map(col => {\n      var _col$selectedItem;\n      return ((_col$selectedItem = col.selectedItem) === null || _col$selectedItem === void 0 ? void 0 : _col$selectedItem.name) || '';\n    }).filter(Boolean);\n    setSelectedDetails(getItemDetails(item, path));\n    setSelectedPathIndex(null);\n  };\n  const handlePathClick = (pathIndex, isDetailsPanelPath = false) => {\n    const clickedItem = columns[pathIndex].selectedItem;\n    if (clickedItem) {\n      if (isDetailsPanelPath) {\n        setSelectedPathIndex(pathIndex);\n        setSelectedDetails(getItemDetails(clickedItem, (selectedDetails === null || selectedDetails === void 0 ? void 0 : selectedDetails.path) || []));\n      } else {\n        var _clickedItem$children;\n        setSelectedPathIndex(null);\n        const newColumns = columns.slice(0, pathIndex + 1);\n        if (clickedItem.type === 'folder' && (_clickedItem$children = clickedItem.children) !== null && _clickedItem$children !== void 0 && _clickedItem$children.length) {\n          newColumns[pathIndex] = {\n            ...newColumns[pathIndex],\n            selectedItem: clickedItem\n          };\n          newColumns.push({\n            items: clickedItem.children,\n            selectedItem: null\n          });\n        } else {\n          newColumns[pathIndex] = {\n            ...newColumns[pathIndex],\n            selectedItem: clickedItem\n          };\n        }\n\n        // Calculate path from columns only\n        const path = newColumns.map(col => {\n          var _col$selectedItem2;\n          return ((_col$selectedItem2 = col.selectedItem) === null || _col$selectedItem2 === void 0 ? void 0 : _col$selectedItem2.name) || '';\n        }).filter(Boolean);\n        setColumns(newColumns);\n        setSelectedDetails(getItemDetails(clickedItem, path));\n      }\n    }\n  };\n  const handleViewMore = () => {\n    if (selectedDetails) {\n      const path = selectedDetails.path.join('/');\n      navigate(`/attribute/${path}`);\n    }\n  };\n  const renderColumn = (column, columnIndex) => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: 280,\n      flex: '0 0 280px',\n      borderRight: columnIndex < columns.length - 1 ? '1px solid' : 'none',\n      borderColor: alpha(theme.palette.divider, 0.08),\n      backgroundColor: 'white',\n      display: 'flex',\n      flexDirection: 'column',\n      overflow: 'hidden',\n      transition: 'all 0.2s ease-in-out',\n      transform: animatingColumns.includes(columnIndex) ? 'translateX(0)' : 'translateX(0)',\n      opacity: animatingColumns.includes(columnIndex) ? 1 : 1,\n      animation: animatingColumns.includes(columnIndex) ? 'slideIn 0.2s ease-in-out' : 'none',\n      '@keyframes slideIn': {\n        '0%': {\n          transform: 'translateX(20px)',\n          opacity: 0\n        },\n        '100%': {\n          transform: 'translateX(0)',\n          opacity: 1\n        }\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        flex: 1,\n        overflow: 'auto',\n        overflowX: 'hidden',\n        py: 1,\n        '&::-webkit-scrollbar': {\n          width: 4\n        },\n        '&::-webkit-scrollbar-track': {\n          backgroundColor: 'transparent'\n        },\n        '&::-webkit-scrollbar-thumb': {\n          backgroundColor: alpha('#000', 0.08),\n          borderRadius: 2,\n          '&:hover': {\n            backgroundColor: alpha('#000', 0.15)\n          }\n        }\n      },\n      children: column.items.map(item => {\n        var _column$selectedItem, _column$selectedItem2, _column$selectedItem3, _column$selectedItem4, _column$selectedItem5, _column$selectedItem6, _column$selectedItem7, _column$selectedItem8;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: () => handleItemClick(item, columnIndex),\n          sx: {\n            cursor: 'pointer',\n            py: 1.5,\n            px: 2,\n            transition: 'all 0.2s ease-in-out',\n            backgroundColor: ((_column$selectedItem = column.selectedItem) === null || _column$selectedItem === void 0 ? void 0 : _column$selectedItem.name) === item.name ? alpha(theme.palette.primary.main, 0.04) : 'transparent',\n            borderLeft: ((_column$selectedItem2 = column.selectedItem) === null || _column$selectedItem2 === void 0 ? void 0 : _column$selectedItem2.name) === item.name ? `2px solid ${theme.palette.primary.main}` : '2px solid transparent',\n            borderRadius: '8px',\n            mx: 1,\n            '&:hover': {\n              backgroundColor: ((_column$selectedItem3 = column.selectedItem) === null || _column$selectedItem3 === void 0 ? void 0 : _column$selectedItem3.name) === item.name ? alpha(theme.palette.primary.main, 0.04) : alpha('#f5f5f5', 0.5),\n              transform: 'translateX(2px)'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            sx: {\n              minWidth: 32,\n              color: ((_column$selectedItem4 = column.selectedItem) === null || _column$selectedItem4 === void 0 ? void 0 : _column$selectedItem4.name) === item.name ? theme.palette.primary.main : alpha('#000', 0.5),\n              transition: 'all 0.2s ease-in-out'\n            },\n            children: item.type === 'folder' ? /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                transition: 'transform 0.2s ease-in-out',\n                transform: ((_column$selectedItem5 = column.selectedItem) === null || _column$selectedItem5 === void 0 ? void 0 : _column$selectedItem5.name) === item.name ? 'scale(1.1)' : 'scale(1)'\n              },\n              children: [((_column$selectedItem6 = column.selectedItem) === null || _column$selectedItem6 === void 0 ? void 0 : _column$selectedItem6.name) === item.name ? /*#__PURE__*/_jsxDEV(FolderOpenIcon, {\n                sx: {\n                  fontSize: 20\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 62\n              }, this) : /*#__PURE__*/_jsxDEV(FolderIcon, {\n                sx: {\n                  fontSize: 20\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 105\n              }, this), /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n                sx: {\n                  ml: 0.5,\n                  fontSize: 16,\n                  opacity: 0.7,\n                  transition: 'transform 0.2s ease-in-out',\n                  transform: ((_column$selectedItem7 = column.selectedItem) === null || _column$selectedItem7 === void 0 ? void 0 : _column$selectedItem7.name) === item.name ? 'rotate(90deg)' : 'rotate(0deg)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(InsertDriveFileIcon, {\n              sx: {\n                fontSize: 20\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: item.name,\n            sx: {\n              '& .MuiTypography-root': {\n                color: ((_column$selectedItem8 = column.selectedItem) === null || _column$selectedItem8 === void 0 ? void 0 : _column$selectedItem8.name) === item.name ? theme.palette.primary.main : alpha('#000', 0.7),\n                transition: 'all 0.2s ease-in-out',\n                fontSize: '0.875rem',\n                fontWeight: item.type === 'folder' ? 500 : 400,\n                lineHeight: 1.5,\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this)]\n        }, item.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 7\n    }, this)\n  }, columnIndex, false, {\n    fileName: _jsxFileName,\n    lineNumber: 526,\n    columnNumber: 5\n  }, this);\n  const renderPath = (ref, isClickable = true, isDetailsPanelPath = false) => {\n    var _selectedDetails$path;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      ref: ref,\n      sx: {\n        display: 'flex',\n        overflowX: 'auto',\n        py: isDetailsPanelPath ? 1.5 : 0.5,\n        px: isDetailsPanelPath ? 2 : 0,\n        pl: isDetailsPanelPath ? 2 : 0.8,\n        bgcolor: isDetailsPanelPath ? alpha('#f8f9fa', 0.8) : 'white',\n        borderBottom: isDetailsPanelPath ? '1px solid' : 'none',\n        borderColor: 'divider',\n        position: 'relative',\n        '&::-webkit-scrollbar': {\n          display: 'none'\n        },\n        scrollbarWidth: 'none',\n        // Firefox\n        msOverflowStyle: 'none',\n        // IE and Edge\n        ...(isDetailsPanelPath && {\n          '&::after': {\n            content: '\"\"',\n            position: 'absolute',\n            bottom: -1,\n            left: 0,\n            right: 0,\n            height: 4,\n            background: 'linear-gradient(180deg, rgba(0,0,0,0.03) 0%, rgba(0,0,0,0) 100%)'\n          }\n        })\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          ...(isDetailsPanelPath && {\n            '&::before': {\n              content: '\"Path:\"',\n              color: '#666666',\n              fontSize: '0.75rem',\n              fontWeight: 500,\n              marginRight: 1.5,\n              textTransform: 'uppercase',\n              letterSpacing: '0.5px'\n            }\n          })\n        },\n        children: selectedDetails === null || selectedDetails === void 0 ? void 0 : (_selectedDetails$path = selectedDetails.path) === null || _selectedDetails$path === void 0 ? void 0 : _selectedDetails$path.map((item, index) => {\n          var _selectedDetails$path2, _selectedDetails$path3, _selectedDetails$path4, _selectedDetails$path5, _selectedDetails$path6, _selectedDetails$path7;\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [index > 0 && /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n              sx: {\n                mx: 0.25,\n                fontSize: isDetailsPanelPath ? 18 : 16,\n                color: isDetailsPanelPath ? alpha('#666666', 0.5) : '#666666',\n                verticalAlign: 'middle'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              onClick: () => isClickable && handlePathClick(index, isDetailsPanelPath),\n              sx: {\n                py: 0.5,\n                px: 1,\n                display: 'flex',\n                alignItems: 'center',\n                whiteSpace: 'nowrap',\n                color: index === ((_selectedDetails$path2 = selectedDetails === null || selectedDetails === void 0 ? void 0 : (_selectedDetails$path3 = selectedDetails.path) === null || _selectedDetails$path3 === void 0 ? void 0 : _selectedDetails$path3.length) !== null && _selectedDetails$path2 !== void 0 ? _selectedDetails$path2 : 0) - 1 ? '#0066cc' : isDetailsPanelPath ? '#1a1a1a' : '#666666',\n                fontWeight: index === ((_selectedDetails$path4 = selectedDetails === null || selectedDetails === void 0 ? void 0 : (_selectedDetails$path5 = selectedDetails.path) === null || _selectedDetails$path5 === void 0 ? void 0 : _selectedDetails$path5.length) !== null && _selectedDetails$path4 !== void 0 ? _selectedDetails$path4 : 0) - 1 ? 600 : 400,\n                fontSize: isDetailsPanelPath ? '0.875rem' : '0.8125rem',\n                cursor: isClickable ? 'pointer' : 'default',\n                backgroundColor: isDetailsPanelPath && selectedPathIndex === index ? alpha('#0066cc', 0.08) : 'transparent',\n                border: isDetailsPanelPath && selectedPathIndex === index ? '1px solid' : '1px solid transparent',\n                borderColor: isDetailsPanelPath && selectedPathIndex === index ? alpha('#0066cc', 0.2) : 'transparent',\n                borderRadius: '4px',\n                transition: 'all 0.2s ease-in-out',\n                '&:hover': isClickable ? {\n                  color: '#0066cc',\n                  backgroundColor: alpha('#0066cc', 0.04),\n                  ...(isDetailsPanelPath && {\n                    transform: 'translateY(-1px)',\n                    boxShadow: `0 2px 4px ${alpha('#000', 0.05)}`\n                  })\n                } : {},\n                ...(isDetailsPanelPath && {\n                  display: 'inline-flex',\n                  alignItems: 'center',\n                  gap: 0.5,\n                  '&::before': {\n                    content: index === 0 ? '\"📁\"' : index === ((_selectedDetails$path6 = selectedDetails === null || selectedDetails === void 0 ? void 0 : (_selectedDetails$path7 = selectedDetails.path) === null || _selectedDetails$path7 === void 0 ? void 0 : _selectedDetails$path7.length) !== null && _selectedDetails$path6 !== void 0 ? _selectedDetails$path6 : 0) - 1 ? '\"📄\"' : '\"📂\"',\n                    fontSize: '1rem',\n                    opacity: 0.8\n                  }\n                })\n              },\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 13\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 5\n    }, this);\n  };\n  const renderDetailsPanel = () => {\n    var _selectedDetails$path8, _selectedDetails$usag;\n    if (!selectedDetails) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: 320,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n        borderRadius: '12px',\n        boxShadow: `0 2px 12px ${alpha('#000', 0.04)}`\n      },\n      children: [(selectedDetails === null || selectedDetails === void 0 ? void 0 : (_selectedDetails$path8 = selectedDetails.path) === null || _selectedDetails$path8 === void 0 ? void 0 : _selectedDetails$path8.length) > 0 && renderPath(detailsPathScrollRef, true, true), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1,\n          overflow: 'auto',\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            color: \"text.secondary\",\n            gutterBottom: true,\n            sx: {\n              fontSize: '0.75rem',\n              fontWeight: 600,\n              textTransform: 'uppercase',\n              letterSpacing: '0.5px',\n              color: alpha('#000', 0.5)\n            },\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              color: alpha('#000', 0.7),\n              fontSize: '0.875rem',\n              lineHeight: 1.6\n            },\n            children: selectedDetails.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 11\n        }, this), selectedDetails.type === 'file' && selectedDetails.xdmPath && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            color: \"text.secondary\",\n            gutterBottom: true,\n            sx: {\n              fontSize: '0.75rem',\n              fontWeight: 600,\n              textTransform: 'uppercase',\n              letterSpacing: '0.5px',\n              color: alpha('#000', 0.5)\n            },\n            children: \"XDM Path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              wordBreak: 'break-all',\n              backgroundColor: alpha('#f5f5f5', 0.5),\n              p: 1.5,\n              borderRadius: '8px',\n              fontSize: '0.75rem',\n              fontFamily: 'monospace',\n              color: alpha('#000', 0.7),\n              lineHeight: 1.5\n            },\n            children: selectedDetails.xdmPath\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            color: \"text.secondary\",\n            gutterBottom: true,\n            sx: {\n              fontSize: '0.75rem',\n              fontWeight: 600,\n              textTransform: 'uppercase',\n              letterSpacing: '0.5px',\n              color: alpha('#000', 0.5)\n            },\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: selectedDetails.status,\n            size: \"small\",\n            sx: {\n              backgroundColor: selectedDetails.status === 'Active' ? alpha(theme.palette.success.main, 0.1) : alpha(theme.palette.warning.main, 0.1),\n              color: selectedDetails.status === 'Active' ? theme.palette.success.main : theme.palette.warning.main,\n              fontWeight: 500,\n              '& .MuiChip-label': {\n                px: 1.5,\n                fontSize: '0.75rem'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 11\n        }, this), selectedDetails.type === 'folder' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              color: \"text.secondary\",\n              gutterBottom: true,\n              sx: {\n                fontSize: '0.75rem',\n                fontWeight: 600,\n                textTransform: 'uppercase',\n                letterSpacing: '0.5px',\n                color: alpha('#000', 0.5)\n              },\n              children: \"Usage Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: alpha('#000', 0.7),\n                fontSize: '0.875rem',\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(BarChartIcon, {\n                sx: {\n                  fontSize: 16,\n                  color: theme.palette.primary.main\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 854,\n                columnNumber: 19\n              }, this), (_selectedDetails$usag = selectedDetails.usageCount) === null || _selectedDetails$usag === void 0 ? void 0 : _selectedDetails$usag.toLocaleString(), \" references\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              color: \"text.secondary\",\n              gutterBottom: true,\n              sx: {\n                fontSize: '0.75rem',\n                fontWeight: 600,\n                textTransform: 'uppercase',\n                letterSpacing: '0.5px',\n                color: alpha('#000', 0.5)\n              },\n              children: \"Data Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: selectedDetails.dataType,\n              size: \"small\",\n              sx: {\n                backgroundColor: alpha(theme.palette.primary.main, 0.1),\n                color: theme.palette.primary.main,\n                fontWeight: 500,\n                '& .MuiChip-label': {\n                  px: 1.5,\n                  fontSize: '0.75rem'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 871,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              color: \"text.secondary\",\n              gutterBottom: true,\n              sx: {\n                fontSize: '0.75rem',\n                fontWeight: 600,\n                textTransform: 'uppercase',\n                letterSpacing: '0.5px',\n                color: alpha('#000', 0.5)\n              },\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 887,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                wordBreak: 'break-all',\n                backgroundColor: alpha('#f5f5f5', 0.5),\n                p: 1.5,\n                borderRadius: '8px',\n                fontSize: '0.75rem',\n                fontFamily: 'monospace',\n                color: alpha('#000', 0.7),\n                lineHeight: 1.5\n              },\n              children: JSON.stringify(selectedDetails.value, null, 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 886,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            my: 2,\n            opacity: 0.08\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 912,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            color: \"text.secondary\",\n            gutterBottom: true,\n            sx: {\n              fontSize: '0.75rem',\n              fontWeight: 600,\n              textTransform: 'uppercase',\n              letterSpacing: '0.5px',\n              color: alpha('#000', 0.5)\n            },\n            children: \"Owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              color: alpha('#000', 0.7),\n              fontSize: '0.875rem',\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(PersonIcon, {\n              sx: {\n                fontSize: 16,\n                color: alpha('#000', 0.5)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 931,\n              columnNumber: 15\n            }, this), selectedDetails.owner]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 924,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: selectedDetails.type === 'file' ? 3 : 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            color: \"text.secondary\",\n            gutterBottom: true,\n            sx: {\n              fontSize: '0.75rem',\n              fontWeight: 600,\n              textTransform: 'uppercase',\n              letterSpacing: '0.5px',\n              color: alpha('#000', 0.5)\n            },\n            children: \"Last Modified\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              color: alpha('#000', 0.7),\n              fontSize: '0.875rem'\n            },\n            children: selectedDetails.lastModified\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 11\n        }, this), selectedDetails.type === 'file' && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"small\",\n          onClick: handleViewMore,\n          sx: {\n            textTransform: 'none',\n            borderRadius: '8px',\n            boxShadow: 'none',\n            mt: 1,\n            fontSize: '0.875rem',\n            py: 1,\n            px: 2,\n            '&:hover': {\n              boxShadow: 'none'\n            }\n          },\n          children: \"View More Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Function to get description for an attribute\n  const getAttributeDescription = attributeName => {\n    const descriptions = {\n      // User Details - Identity\n      'firstName': 'The user\\'s first name from their profile.',\n      'lastName': 'The user\\'s last name from their profile.',\n      'countryCode': 'The country code associated with the user\\'s address.',\n      'userAccountCreationDate': 'The date when the user\\'s account was created.',\n      'isAdobeEmployee': 'Indicates whether the user is an Adobe employee.',\n      // User Details - Email\n      'address': 'The user\\'s email address.',\n      'emailDomain': 'The domain portion of the user\\'s email address.',\n      'hashedEmail': 'Hashed version of the user\\'s email for security.',\n      'emailValidFlag': 'Indicates if the email has been validated.',\n      // Email Marketing Permission\n      'emailMarketingPermission': 'User\\'s consent status for email marketing.',\n      'val': 'The actual permission value for email marketing.',\n      'time': 'Timestamp of when the permission was last updated.',\n      // Individual Entitlements\n      'numberOfEntitledProducts': 'Total number of products the user is entitled to.',\n      'productInfo': 'Detailed information about entitled products.',\n      'productCode': 'Unique code identifying the product.',\n      'productName': 'Name of the entitled product.',\n      'productID': 'Unique identifier for the product.',\n      'family': 'Product family grouping.',\n      'bundleID': 'Identifier for the product bundle.',\n      // Team Entitlements\n      'contractInfo': 'Information about the team\\'s contract.',\n      'buyingProgram': 'The program through which the contract was purchased.',\n      'contractStartDTS': 'Contract start date.',\n      'contractEndDTS': 'Contract end date.',\n      'contractStatus': 'Current status of the contract.',\n      'contractType': 'Type of contract.',\n      'adminRoles': 'Administrative roles assigned in the contract.',\n      // Models and Scores\n      'overallScore': 'Aggregate score based on user behavior and attributes.',\n      'modelScore': 'Raw score from the predictive model.',\n      'modelPercentileScore': 'Percentile rank of the model score.',\n      'modelScoreDate': 'Date when the score was last calculated.',\n      'modelUserSegment': 'User segment based on the model score.',\n      // Product Activity\n      'installs': 'Product installation events.',\n      'launches': 'Product launch events.',\n      'desktop': 'Activity on desktop platforms.',\n      'mobile': 'Activity on mobile platforms.',\n      'web': 'Activity on web platforms.'\n    };\n\n    // Convert the attribute name to lowercase and remove spaces for matching\n    const normalizedName = attributeName.toLowerCase().replace(/\\s+/g, '');\n\n    // Try to find a direct match first\n    if (descriptions[attributeName]) {\n      return descriptions[attributeName];\n    }\n\n    // Try to find a match with the normalized name\n    const matchingKey = Object.keys(descriptions).find(key => key.toLowerCase().replace(/\\s+/g, '') === normalizedName);\n    if (matchingKey) {\n      return descriptions[matchingKey];\n    }\n\n    // Default description if no match is found\n    return 'A structured attribute used for data organization and management.';\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(255, 255, 255, 0.6)',\n        backdropFilter: 'blur(8px)',\n        zIndex: 1200,\n        display: isSearchExpanded ? 'flex' : 'none',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        pt: '15vh',\n        opacity: isSearchExpanded ? 1 : 0,\n        transition: 'opacity 0.4s cubic-bezier(0.16, 1, 0.3, 1)',\n        animation: isSearchExpanded ? 'fadeIn 0.4s cubic-bezier(0.16, 1, 0.3, 1)' : 'none',\n        '@keyframes fadeIn': {\n          '0%': {\n            opacity: 0\n          },\n          '100%': {\n            opacity: 1\n          }\n        }\n      },\n      onClick: () => setIsSearchExpanded(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '90%',\n          maxWidth: '1000px',\n          backgroundColor: 'white',\n          borderRadius: '16px',\n          boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\n          p: 3,\n          transform: isSearchExpanded ? 'translateY(0)' : 'translateY(-20px)',\n          opacity: isSearchExpanded ? 1 : 0,\n          transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\n          maxHeight: '70vh',\n          display: 'flex',\n          flexDirection: 'column',\n          animation: isSearchExpanded ? 'slideIn 0.5s cubic-bezier(0.16, 1, 0.3, 1)' : 'none',\n          '@keyframes slideIn': {\n            '0%': {\n              transform: 'translateY(-20px)',\n              opacity: 0\n            },\n            '100%': {\n              transform: 'translateY(0)',\n              opacity: 1\n            }\n          }\n        },\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          inputRef: searchInputRef,\n          fullWidth: true,\n          placeholder: \"Search attributes, events, or values...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          size: \"medium\",\n          sx: {\n            '& .MuiOutlinedInput-root': {\n              borderRadius: '12px',\n              backgroundColor: alpha('#fff', 0.8),\n              '& fieldset': {\n                borderColor: alpha(theme.palette.divider, 0.1)\n              },\n              '&:hover fieldset': {\n                borderColor: alpha(theme.palette.primary.main, 0.3)\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: alpha(theme.palette.primary.main, 0.5)\n              }\n            },\n            animation: isSearchExpanded ? 'fadeIn 0.6s cubic-bezier(0.16, 1, 0.3, 1)' : 'none',\n            '@keyframes fadeIn': {\n              '0%': {\n                opacity: 0\n              },\n              '100%': {\n                opacity: 1\n              }\n            }\n          },\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                sx: {\n                  fontSize: 24,\n                  color: alpha('#000', 0.4),\n                  animation: isSearchExpanded ? 'pulse 1s cubic-bezier(0.16, 1, 0.3, 1)' : 'none',\n                  '@keyframes pulse': {\n                    '0%': {\n                      transform: 'scale(0.8)',\n                      opacity: 0.5\n                    },\n                    '50%': {\n                      transform: 'scale(1.1)'\n                    },\n                    '100%': {\n                      transform: 'scale(1)',\n                      opacity: 1\n                    }\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1155,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1154,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            overflow: 'auto',\n            maxHeight: '50vh',\n            '&::-webkit-scrollbar': {\n              width: 4\n            },\n            '&::-webkit-scrollbar-track': {\n              backgroundColor: 'transparent'\n            },\n            '&::-webkit-scrollbar-thumb': {\n              backgroundColor: alpha('#000', 0.08),\n              borderRadius: 2,\n              '&:hover': {\n                backgroundColor: alpha('#000', 0.15)\n              }\n            },\n            animation: isSearchExpanded ? 'fadeIn 0.7s cubic-bezier(0.16, 1, 0.3, 1)' : 'none',\n            '@keyframes fadeIn': {\n              '0%': {\n                opacity: 0\n              },\n              '100%': {\n                opacity: 1\n              }\n            }\n          },\n          children: searchQuery.trim() ? searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n            children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              onClick: () => navigateToSearchResult(result),\n              sx: {\n                cursor: 'pointer',\n                py: 1.5,\n                px: 2,\n                transition: 'all 0.2s ease-in-out',\n                borderRadius: '8px',\n                '&:hover': {\n                  backgroundColor: alpha(theme.palette.primary.main, 0.04),\n                  transform: 'translateX(2px)'\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                sx: {\n                  minWidth: 32,\n                  color: alpha('#000', 0.5)\n                },\n                children: result.type === 'folder' ? /*#__PURE__*/_jsxDEV(FolderIcon, {\n                  sx: {\n                    fontSize: 20\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1224,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(InsertDriveFileIcon, {\n                  sx: {\n                    fontSize: 20\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1226,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1219,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 1,\n                    mb: 0.5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: '0.875rem',\n                      fontWeight: 600,\n                      color: alpha('#000', 0.87)\n                    },\n                    children: result.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1231,\n                    columnNumber: 27\n                  }, this), result.dataOwner && /*#__PURE__*/_jsxDEV(Chip, {\n                    label: `Owner: ${result.dataOwner}`,\n                    size: \"small\",\n                    sx: {\n                      height: 20,\n                      fontSize: '0.625rem',\n                      fontWeight: 500,\n                      backgroundColor: alpha('#9C27B0', 0.1),\n                      color: '#9C27B0'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1241,\n                    columnNumber: 29\n                  }, this), result.dataSource && /*#__PURE__*/_jsxDEV(Chip, {\n                    label: `Source: ${result.dataSource}`,\n                    size: \"small\",\n                    sx: {\n                      height: 20,\n                      fontSize: '0.625rem',\n                      fontWeight: 500,\n                      backgroundColor: alpha('#2196F3', 0.1),\n                      color: '#2196F3'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1254,\n                    columnNumber: 29\n                  }, this), result.latency && /*#__PURE__*/_jsxDEV(Chip, {\n                    label: `Latency: ${result.latency}`,\n                    size: \"small\",\n                    sx: {\n                      height: 20,\n                      fontSize: '0.625rem',\n                      fontWeight: 500,\n                      backgroundColor: alpha('#4CAF50', 0.1),\n                      color: '#4CAF50'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1267,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1230,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: '0.75rem',\n                      color: alpha('#000', 0.5),\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: 0.5\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(FolderOpenIcon, {\n                      sx: {\n                        fontSize: 16\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1290,\n                      columnNumber: 29\n                    }, this), getPathToNode(result, transformToTree(transformUserData(userData))).join(' > ')]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1281,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1280,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1229,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1204,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1202,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 3,\n              textAlign: 'center',\n              color: alpha('#000', 0.5)\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"No results found for \\\"\", searchQuery, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1304,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1299,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 3,\n              textAlign: 'center',\n              color: alpha('#000', 0.5)\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"Start typing to search...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1315,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1310,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1064,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          body.search-overlay-active nav,\n          body.search-overlay-active aside {\n            filter: blur(8px);\n            transition: filter 0.3s ease;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: '16px 24px',\n        flexShrink: 0,\n        backgroundColor: 'white',\n        borderBottom: '1px solid',\n        borderColor: alpha(theme.palette.divider, 0.08),\n        position: 'sticky',\n        top: 0,\n        zIndex: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          value: tabValue,\n          exclusive: true,\n          onChange: handleNavigationChange,\n          \"aria-label\": \"navigation type\",\n          sx: {\n            justifyContent: 'flex-start',\n            '& .MuiToggleButton-root': {\n              textTransform: 'none',\n              px: 2,\n              py: 1,\n              border: 'none',\n              borderRadius: '8px',\n              mx: 0,\n              mr: 1,\n              '&.Mui-selected': {\n                backgroundColor: alpha(theme.palette.primary.main, 0.08),\n                color: theme.palette.primary.main,\n                '&:hover': {\n                  backgroundColor: alpha(theme.palette.primary.main, 0.12)\n                }\n              },\n              '&:hover': {\n                backgroundColor: alpha('#000', 0.04)\n              }\n            }\n          },\n          children: navigationOptions.map((option, index) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: index,\n            \"aria-label\": option.label,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1\n              },\n              children: [option.icon, /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  fontSize: '0.875rem',\n                  fontWeight: 500\n                },\n                children: option.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1383,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1381,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1380,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: \"Search...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          onClick: () => setIsSearchExpanded(true),\n          size: \"small\",\n          sx: {\n            width: '500px',\n            '& .MuiOutlinedInput-root': {\n              borderRadius: '8px',\n              backgroundColor: alpha('#fff', 0.8),\n              '& fieldset': {\n                borderColor: alpha(theme.palette.divider, 0.1)\n              },\n              '&:hover fieldset': {\n                borderColor: alpha(theme.palette.primary.main, 0.3)\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: alpha(theme.palette.primary.main, 0.5)\n              }\n            }\n          },\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                sx: {\n                  fontSize: 18,\n                  color: alpha('#000', 0.4)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1416,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1415,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1391,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1345,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        minHeight: 0,\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'relative',\n        p: '16px 24px',\n        gap: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2,\n          flex: 1,\n          minHeight: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: 1,\n            backgroundColor: 'white',\n            overflow: 'hidden',\n            display: 'flex',\n            borderRadius: '12px',\n            boxShadow: `0 2px 12px ${alpha('#000', 0.04)}`\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            ref: scrollContainerRef,\n            sx: {\n              flex: 1,\n              display: 'flex',\n              overflowX: 'auto',\n              overflowY: 'hidden',\n              scrollBehavior: 'smooth',\n              '&::-webkit-scrollbar': {\n                height: 4\n              },\n              '&::-webkit-scrollbar-track': {\n                backgroundColor: 'transparent'\n              },\n              '&::-webkit-scrollbar-thumb': {\n                backgroundColor: alpha('#000', 0.08),\n                borderRadius: 2,\n                '&:hover': {\n                  backgroundColor: alpha('#000', 0.15)\n                }\n              }\n            },\n            children: [columns.map((column, index) => renderColumn(column, index)), columns.length === 1 && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: '100%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                backgroundColor: alpha(theme.palette.background.paper, 0.5),\n                color: alpha('#000', 0.4),\n                flexDirection: 'column',\n                gap: 1.5,\n                p: 4\n              },\n              children: [/*#__PURE__*/_jsxDEV(FolderIcon, {\n                sx: {\n                  fontSize: 40,\n                  color: alpha('#000', 0.12)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1476,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  color: alpha('#000', 0.6),\n                  fontWeight: 500\n                },\n                children: \"No Items Selected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1477,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                align: \"center\",\n                sx: {\n                  maxWidth: 300,\n                  color: alpha('#000', 0.4),\n                  fontSize: '0.875rem',\n                  lineHeight: 1.5\n                },\n                children: \"Select a folder to explore its contents and view detailed information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1483,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1463,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1444,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1436,\n          columnNumber: 11\n        }, this), renderDetailsPanel()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1434,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1425,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1057,\n    columnNumber: 5\n  }, this);\n};\n_s(DataWizard, \"l7LS8opSkFKQiYVibbJNf+FRLFg=\", false, function () {\n  return [useNavigate, useSearchParams, useTheme];\n});\n_c = DataWizard;\nexport default DataWizard;\nvar _c;\n$RefreshReg$(_c, \"DataWizard\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","Typography","TextField","Paper","List","ListItem","ListItemIcon","ListItemText","alpha","Button","ToggleButtonGroup","ToggleButton","Chip","Divider","InputAdornment","FolderIcon","FolderOpenIcon","InsertDriveFileIcon","SearchIcon","BarChartIcon","ChevronRightIcon","PersonIcon","useTheme","useNavigate","useSearchParams","userData","transformUserData","transformToTree","jsxDEV","_jsxDEV","Fragment","_Fragment","generateUsageData","data","today","Date","i","date","setDate","getDate","push","toLocaleDateString","month","day","usage","Math","floor","random","intermediateTables","name","description","rowCount","DataWizard","_s","tabValue","setTabValue","searchQuery","setSearchQuery","isSearchExpanded","setIsSearchExpanded","searchResults","setSearchResults","searchInputRef","columns","setColumns","items","selectedItem","selectedDetails","setSelectedDetails","animatingColumns","setAnimatingColumns","scrollContainerRef","detailsPathScrollRef","selectedPathIndex","setSelectedPathIndex","navigate","searchParams","theme","path","get","selected","expand","transformedData","treeData","pathArray","split","newColumns","currentItems","pathItem","columnItem","find","item","children","foundItem","_selectedItem$childre","length","type","fullPath","details","getItemDetails","console","log","current","scrollTo","left","scrollWidth","behavior","trim","results","searchInTree","toLowerCase","setTimeout","_searchInputRef$curre","focus","document","body","classList","add","remove","nodes","query","node","includes","childResults","getPathToNode","tree","findPath","currentNode","targetNode","currentPath","child","rootNode","navigateToSearchResult","result","handleNavigationChange","_","newValue","navigationOptions","label","icon","sx","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","baseDetails","value","lastModified","now","owner","getOriginalPath","transformedPath","pathMappings","transformedPathStr","join","matchingPaths","Object","entries","filter","key","startsWith","sort","a","b","matchingPath","originalPathPrefix","remainingPath","slice","folderTypes","usageCount","status","getAttributeDescription","dataType","xdmPath","handleItemClick","columnIndex","_item$children","map","col","_col$selectedItem","Boolean","handlePathClick","pathIndex","isDetailsPanelPath","clickedItem","_clickedItem$children","_col$selectedItem2","handleViewMore","renderColumn","column","width","flex","borderRight","borderColor","palette","divider","backgroundColor","display","flexDirection","overflow","transition","transform","opacity","animation","overflowX","py","borderRadius","_column$selectedItem","_column$selectedItem2","_column$selectedItem3","_column$selectedItem4","_column$selectedItem5","_column$selectedItem6","_column$selectedItem7","_column$selectedItem8","onClick","cursor","px","primary","main","borderLeft","mx","minWidth","color","alignItems","ml","fontWeight","lineHeight","textOverflow","whiteSpace","renderPath","ref","isClickable","_selectedDetails$path","pl","bgcolor","borderBottom","position","scrollbarWidth","msOverflowStyle","content","bottom","right","height","background","marginRight","textTransform","letterSpacing","index","_selectedDetails$path2","_selectedDetails$path3","_selectedDetails$path4","_selectedDetails$path5","_selectedDetails$path6","_selectedDetails$path7","verticalAlign","border","boxShadow","gap","renderDetailsPanel","_selectedDetails$path8","_selectedDetails$usag","p","mb","variant","gutterBottom","wordBreak","fontFamily","size","success","warning","toLocaleString","JSON","stringify","my","mt","attributeName","descriptions","normalizedName","replace","matchingKey","keys","top","backdropFilter","zIndex","justifyContent","pt","maxWidth","maxHeight","e","stopPropagation","autoFocus","inputRef","fullWidth","placeholder","onChange","target","InputProps","startAdornment","dataOwner","dataSource","latency","textAlign","flexShrink","exclusive","mr","option","minHeight","overflowY","scrollBehavior","paper","align","_c","$RefreshReg$"],"sources":["/Users/sachet/Desktop/XIS/src/components/DataWizard/DataWizard.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  TextField,\n  Paper,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  IconButton,\n  Tooltip,\n  alpha,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  ToggleButtonGroup,\n  ToggleButton,\n  Chip,\n  Divider,\n  InputAdornment,\n} from '@mui/material';\nimport FolderIcon from '@mui/icons-material/Folder';\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen';\nimport InsertDriveFileIcon from '@mui/icons-material/InsertDriveFile';\nimport SearchIcon from '@mui/icons-material/Search';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport GetAppIcon from '@mui/icons-material/GetApp';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { useTheme } from '@mui/material/styles';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { userData } from '../../data/userData';\nimport { transformUserData } from '../../utils/userDataTransformer';\nimport { transformToTree, type TreeNode, searchInTree, getPathToNode } from '../../utils/treeTransform';\nimport { \n  LineChart, \n  Line, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip as RechartsTooltip, \n  Legend, \n  ResponsiveContainer \n} from 'recharts';\n\ninterface ColumnData {\n  items: TreeNode[];\n  selectedItem: TreeNode | null;\n}\n\ninterface SelectedDetails {\n  name: string;\n  value: any;\n  type: 'folder' | 'file';\n  path: string[];\n  description?: string;\n  owner?: string;\n  lastModified?: string;\n  usageCount?: number;\n  status?: string;\n  dataType?: string;\n  xdmPath?: string;\n}\n\ninterface FolderTypeDetails {\n  description: string;\n  usageCount: number;\n  status: string;\n}\n\ninterface FileTypeDetails {\n  description: string;\n  dataType: string;\n  status: string;\n}\n\ninterface FolderTypes {\n  'Anonymous User': FolderTypeDetails;\n  'Email Domain Properties': FolderTypeDetails;\n  'Member Account GUID': FolderTypeDetails;\n  'System Computed Attributes': FolderTypeDetails;\n  [key: string]: FolderTypeDetails | undefined;\n}\n\ninterface FileTypes {\n  'BriteVerify Email Invalid': FileTypeDetails;\n  'Email Domain': FileTypeDetails;\n  'Email Security Token': FileTypeDetails;\n  'Decile 1 Month': FileTypeDetails;\n  [key: string]: FileTypeDetails | undefined;\n}\n\n// Dummy data for usage timeline chart\nconst generateUsageData = () => {\n  const data = [];\n  const today = new Date();\n  \n  for (let i = 30; i >= 0; i--) {\n    const date = new Date(today);\n    date.setDate(date.getDate() - i);\n    \n    data.push({\n      date: date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\n      usage: Math.floor(Math.random() * 1000) + 500,\n    });\n  }\n  \n  return data;\n};\n\n// Dummy data for intermediate tables\nconst intermediateTables = [\n  { name: 'Raw_User_Data', description: 'Raw user data collected from various sources', rowCount: 1250000 },\n  { name: 'Processed_User_Profiles', description: 'Processed and normalized user profiles', rowCount: 980000 },\n  { name: 'User_Segments', description: 'User segments based on behavior and attributes', rowCount: 45000 },\n  { name: 'Final_User_Attributes', description: 'Final user attributes used in applications', rowCount: 750000 },\n];\n\nconst DataWizard: React.FC = () => {\n  const [tabValue, setTabValue] = useState(0);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isSearchExpanded, setIsSearchExpanded] = useState(false);\n  const [searchResults, setSearchResults] = useState<TreeNode[]>([]);\n  const searchInputRef = useRef<HTMLInputElement>(null);\n  const [columns, setColumns] = useState<ColumnData[]>([\n    { items: transformToTree(transformUserData(userData)), selectedItem: null }\n  ]);\n  const [selectedDetails, setSelectedDetails] = useState<SelectedDetails | null>(null);\n  const [animatingColumns, setAnimatingColumns] = useState<number[]>([]);\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const detailsPathScrollRef = useRef<HTMLDivElement>(null);\n  const [selectedPathIndex, setSelectedPathIndex] = useState<number | null>(null);\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const theme = useTheme();\n\n  // Handle URL parameters\n  useEffect(() => {\n    const path = searchParams.get('path');\n    const selected = searchParams.get('selected');\n    const expand = searchParams.get('expand') === 'true';\n\n    if (path || selected) {\n      const transformedData = transformUserData(userData);\n      const treeData = transformToTree(transformedData);\n      const pathArray = path ? path.split('/') : [];\n      \n      // Reset columns and build the path\n      const newColumns: ColumnData[] = [];\n      let currentItems = treeData;\n      let selectedItem: TreeNode | null = null;\n      \n      // Build columns for the path\n      for (const pathItem of pathArray) {\n        const columnItem = currentItems.find(item => item.name === pathItem);\n        if (columnItem) {\n          newColumns.push({ items: currentItems, selectedItem: columnItem });\n          currentItems = columnItem.children || [];\n        }\n      }\n      \n      // If there's a selected item, find it in the current level\n      if (selected) {\n        const foundItem = currentItems.find(item => item.name === selected);\n        if (foundItem) {\n          selectedItem = foundItem;\n          // Add or update the last column with the selected item\n          if (newColumns.length > 0) {\n            newColumns[newColumns.length - 1] = { \n              items: currentItems, \n              selectedItem \n            };\n          } else {\n            newColumns.push({ items: currentItems, selectedItem });\n          }\n          \n          // If expand is true and it's a folder, add its children\n          if (expand && selectedItem.type === 'folder' && selectedItem.children?.length) {\n            newColumns.push({ items: selectedItem.children, selectedItem: null });\n          }\n          \n          // Set selected details with the full path\n          const fullPath = path ? [...pathArray, selected] : [selected];\n          const details = getItemDetails(selectedItem, fullPath);\n          setSelectedDetails(details);\n          \n          // Log for debugging\n          console.log('Setting selected details:', {\n            name: selectedItem.name,\n            path: fullPath,\n            details\n          });\n        }\n      }\n      \n      setColumns(newColumns);\n    }\n  }, [searchParams]);\n\n  // Add a debug effect to log when selectedDetails changes\n  useEffect(() => {\n    console.log('Selected details updated:', selectedDetails);\n  }, [selectedDetails]);\n\n  // Auto-scroll when new columns or path items are added\n  useEffect(() => {\n    if (scrollContainerRef.current) {\n      scrollContainerRef.current.scrollTo({\n        left: scrollContainerRef.current.scrollWidth,\n        behavior: 'smooth'\n      });\n    }\n    if (detailsPathScrollRef.current) {\n      detailsPathScrollRef.current.scrollTo({\n        left: detailsPathScrollRef.current.scrollWidth,\n        behavior: 'smooth'\n      });\n    }\n  }, [columns.length, selectedDetails?.path.length]);\n\n  // Add search functionality\n  useEffect(() => {\n    if (searchQuery.trim()) {\n      const transformedData = transformUserData(userData);\n      const results = searchInTree(transformToTree(transformedData), searchQuery.toLowerCase());\n      setSearchResults(results);\n    } else {\n      setSearchResults([]);\n    }\n  }, [searchQuery]);\n\n  // Focus search input when overlay opens\n  useEffect(() => {\n    if (isSearchExpanded && searchInputRef.current) {\n      // Small delay to ensure the overlay is rendered\n      setTimeout(() => {\n        searchInputRef.current?.focus();\n      }, 100);\n    }\n  }, [isSearchExpanded]);\n\n  // Effect to toggle body class for blur effect\n  useEffect(() => {\n    if (isSearchExpanded) {\n      document.body.classList.add('search-overlay-active');\n    } else {\n      document.body.classList.remove('search-overlay-active');\n    }\n    return () => {\n      document.body.classList.remove('search-overlay-active');\n    };\n  }, [isSearchExpanded]);\n\n  // Function to search in the tree structure\n  const searchInTree = (nodes: TreeNode[], query: string): TreeNode[] => {\n    let results: TreeNode[] = [];\n    \n    for (const node of nodes) {\n      // Check if the current node matches\n      if (node.name.toLowerCase().includes(query)) {\n        results.push(node);\n      }\n      \n      // If it's a folder, search in its children\n      if (node.type === 'folder' && node.children) {\n        const childResults = searchInTree(node.children, query);\n        results = [...results, ...childResults];\n      }\n    }\n    \n    return results;\n  };\n\n  // Function to get the path to a node\n  const getPathToNode = (node: TreeNode, tree: TreeNode[]): string[] => {\n    const findPath = (currentNode: TreeNode, targetNode: TreeNode, currentPath: string[]): string[] | null => {\n      if (currentNode.name === targetNode.name) {\n        return [...currentPath, currentNode.name];\n      }\n      \n      if (currentNode.type === 'folder' && currentNode.children) {\n        for (const child of currentNode.children) {\n          const path = findPath(child, targetNode, [...currentPath, currentNode.name]);\n          if (path) return path;\n        }\n      }\n      \n      return null;\n    };\n    \n    for (const rootNode of tree) {\n      const path = findPath(rootNode, node, []);\n      if (path) return path;\n    }\n    \n    return [node.name];\n  };\n\n  // Function to navigate to a search result\n  const navigateToSearchResult = (result: TreeNode) => {\n    const transformedData = transformUserData(userData);\n    const path = getPathToNode(result, transformToTree(transformedData));\n    \n    // Reset columns and build the path\n    const newColumns: ColumnData[] = [];\n    let currentItems = transformToTree(transformedData);\n    \n    for (const pathItem of path) {\n      const columnItem = currentItems.find(item => item.name === pathItem);\n      if (columnItem) {\n        newColumns.push({ items: currentItems, selectedItem: columnItem });\n        currentItems = columnItem.children || [];\n      }\n    }\n    \n    setColumns(newColumns);\n    setSelectedDetails(getItemDetails(result, path));\n    setIsSearchExpanded(false);\n  };\n\n  const handleNavigationChange = (_: React.MouseEvent<HTMLElement>, newValue: number) => {\n    if (newValue !== null) {\n      setTabValue(newValue);\n    }\n  };\n\n  const navigationOptions = [\n    { \n      label: 'Profile Attributes', \n      icon: <PersonIcon sx={{ fontSize: 18 }} />,\n      description: 'User profile and identity attributes'\n    },\n    { \n      label: 'Experience Events', \n      icon: <BarChartIcon sx={{ fontSize: 18 }} />,\n      description: 'User interaction and behavior events'\n    },\n    { \n      label: 'Lookup Attributes', \n      icon: <SearchIcon sx={{ fontSize: 18 }} />,\n      description: 'Reference and lookup data attributes'\n    },\n  ];\n\n  const getItemDetails = (item: TreeNode, path: string[]): SelectedDetails => {\n    const baseDetails = {\n      name: item.name,\n      value: item.value,\n      type: item.type,\n      path,\n      lastModified: new Date(Date.now() - Math.random() * 10000000000).toLocaleDateString(),\n      owner: ['Priya Shanmugan', 'John Smith', 'Sarah Chen', 'Mike Johnson'][Math.floor(Math.random() * 4)]\n    };\n\n    // Get the original path for XDM\n    const getOriginalPath = (transformedPath: string[]): string => {\n      const pathMappings: Record<string, string> = {\n        // User Details - Identity\n        'userDetails/identity/firstName': 'person/name/firstname',\n        'userDetails/identity/lastName': 'person/name/lastname',\n        'userDetails/identity/countryCode': 'homeAddress/countryCode',\n        'userDetails/identity/userAccountCreationDate': 'adobeCorpnew/memberAccountGUID/userDetails/userAccountCreationDate',\n        'userDetails/identity/isAdobeEmployee': 'adobeCorpnew/isAdobeEmployee',\n        \n        // User Details - Email\n        'userDetails/email/address': 'personalEmail/address',\n        'userDetails/email/emailDomain': 'adobeCorpnew/emailDomain',\n        'userDetails/email/hashedEmail': 'adobeCorpnew/hashedEmail',\n        'userDetails/email/emailValidFlag': 'adobeCorpnew/emailValidFlag',\n        \n        // Email Marketing Permission\n        'emailMarketingPermission': 'personalEmail/optInOut',\n        'Email Marketing Permission': 'personalEmail/optInOut',\n        'emailMarketingPermission/val': 'personalEmail/optInOut/val',\n        'emailMarketingPermission/time': 'personalEmail/optInOut/time',\n        \n        // Individual Entitlements\n        'individualEntitlements': 'adobeCorpnew/entitlements',\n        'Individual Entitlements': 'adobeCorpnew/entitlements',\n        'individualEntitlements/numberOfEntitledProducts': 'adobeCorpnew/entitlements/numberOfEntitledProducts',\n        \n        // Team Entitlements\n        'teamEntitlements': 'adobeCorpnew/memberAccountGUID/contract',\n        'Team Entitlements': 'adobeCorpnew/memberAccountGUID/contract',\n        \n        // Models and Scores\n        'modelsAndScores/overallScore': 'adobeCorpnew/memberAccountGUID/modelsAndScores/SKU_RANK',\n        'Models and Scores/Overall Score': 'adobeCorpnew/memberAccountGUID/modelsAndScores/SKU_RANK',\n        \n        // Product Activity\n        'productActivity': 'adobeCorpnew/memberAccountGUID/productActivity',\n        'Product Activity': 'adobeCorpnew/memberAccountGUID/productActivity'\n      };\n\n      const transformedPathStr = transformedPath.join('/');\n      \n      // Try exact match first\n      if (pathMappings[transformedPathStr]) {\n        return pathMappings[transformedPathStr];\n      }\n\n      // Find all parent paths that match\n      const matchingPaths = Object.entries(pathMappings)\n        .filter(([key]) => transformedPathStr.startsWith(key))\n        .sort((a, b) => b[0].length - a[0].length); // Sort by length descending\n\n      if (matchingPaths.length > 0) {\n        // Use the longest matching path\n        const [matchingPath, originalPathPrefix] = matchingPaths[0];\n        // Get the remaining path segments\n        const remainingPath = transformedPathStr.slice(matchingPath.length);\n        // If there's a remaining path, append it to the original path\n        return remainingPath ? \n          `${originalPathPrefix}${remainingPath}` : \n          originalPathPrefix;\n      }\n\n      // If no mapping found, return the path as is\n      return transformedPathStr;\n    };\n\n    if (item.type === 'folder') {\n      const folderTypes: FolderTypes = {\n        'Anonymous User': {\n          description: 'Contains attributes related to anonymous user tracking and identification.',\n          usageCount: 1247,\n          status: 'Active',\n        },\n        'Email Domain Properties': {\n          description: 'Email-related configurations and domain-specific settings.',\n          usageCount: 856,\n          status: 'Active',\n        },\n        'Member Account GUID': {\n          description: 'Global unique identifier management for member accounts.',\n          usageCount: 2341,\n          status: 'Active',\n        },\n        'System Computed Attributes': {\n          description: 'Automatically calculated and maintained system attributes.',\n          usageCount: 1589,\n          status: 'Active',\n        }\n      };\n\n      return {\n        ...baseDetails,\n        ...(folderTypes[item.name] || {\n          description: 'A collection of related attributes and configurations.',\n          usageCount: Math.floor(Math.random() * 2000) + 500,\n          status: Math.random() > 0.1 ? 'Active' : 'Deprecated'\n        })\n      };\n    }\n\n    // For files (attributes), include XDM path\n    return {\n      ...baseDetails,\n      description: getAttributeDescription(item.name),\n      status: Math.random() > 0.1 ? 'Active' : 'Deprecated',\n      dataType: typeof item.value,\n      xdmPath: `xdm:${getOriginalPath(path)}`\n    };\n  };\n\n  const handleItemClick = (item: TreeNode, columnIndex: number) => {\n    const newColumns = columns.slice(0, columnIndex + 1);\n    newColumns[columnIndex] = { ...newColumns[columnIndex], selectedItem: item };\n    \n    if (item.type === 'folder' && item.children?.length) {\n      setAnimatingColumns([...animatingColumns, columnIndex + 1]);\n      setTimeout(() => {\n        newColumns.push({ items: item.children || [], selectedItem: null });\n        setColumns(newColumns);\n      }, 150);\n    } else {\n      setColumns(newColumns);\n    }\n    \n    // Calculate the path from columns only\n    const path = newColumns.map((col: ColumnData) => col.selectedItem?.name || '').filter(Boolean);\n    \n    setSelectedDetails(getItemDetails(item, path));\n    setSelectedPathIndex(null);\n  };\n\n  const handlePathClick = (pathIndex: number, isDetailsPanelPath: boolean = false) => {\n    const clickedItem = columns[pathIndex].selectedItem;\n    if (clickedItem) {\n      if (isDetailsPanelPath) {\n        setSelectedPathIndex(pathIndex);\n        setSelectedDetails(getItemDetails(clickedItem, selectedDetails?.path || []));\n      } else {\n        setSelectedPathIndex(null);\n        const newColumns = columns.slice(0, pathIndex + 1);\n        \n        if (clickedItem.type === 'folder' && clickedItem.children?.length) {\n          newColumns[pathIndex] = { ...newColumns[pathIndex], selectedItem: clickedItem };\n          newColumns.push({ items: clickedItem.children, selectedItem: null });\n        } else {\n          newColumns[pathIndex] = { ...newColumns[pathIndex], selectedItem: clickedItem };\n        }\n        \n        // Calculate path from columns only\n        const path = newColumns.map((col: ColumnData) => col.selectedItem?.name || '').filter(Boolean);\n        \n        setColumns(newColumns);\n        setSelectedDetails(getItemDetails(clickedItem, path));\n      }\n    }\n  };\n\n  const handleViewMore = () => {\n    if (selectedDetails) {\n      const path = selectedDetails.path.join('/');\n      navigate(`/attribute/${path}`);\n    }\n  };\n\n  const renderColumn = (column: ColumnData, columnIndex: number) => (\n    <Box\n      key={columnIndex}\n      sx={{\n        width: 280,\n        flex: '0 0 280px',\n        borderRight: columnIndex < columns.length - 1 ? '1px solid' : 'none',\n        borderColor: alpha(theme.palette.divider, 0.08),\n        backgroundColor: 'white',\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n        transition: 'all 0.2s ease-in-out',\n        transform: animatingColumns.includes(columnIndex) ? 'translateX(0)' : 'translateX(0)',\n        opacity: animatingColumns.includes(columnIndex) ? 1 : 1,\n        animation: animatingColumns.includes(columnIndex) ? 'slideIn 0.2s ease-in-out' : 'none',\n        '@keyframes slideIn': {\n          '0%': {\n            transform: 'translateX(20px)',\n            opacity: 0\n          },\n          '100%': {\n            transform: 'translateX(0)',\n            opacity: 1\n          }\n        }\n      }}\n    >\n      <List sx={{ \n        flex: 1, \n        overflow: 'auto',\n        overflowX: 'hidden',\n        py: 1,\n        '&::-webkit-scrollbar': { width: 4 },\n        '&::-webkit-scrollbar-track': { backgroundColor: 'transparent' },\n        '&::-webkit-scrollbar-thumb': {\n          backgroundColor: alpha('#000', 0.08),\n          borderRadius: 2,\n          '&:hover': { backgroundColor: alpha('#000', 0.15) }\n        }\n      }}>\n        {column.items.map((item) => (\n          <ListItem\n            key={item.name}\n            onClick={() => handleItemClick(item, columnIndex)}\n            sx={{\n              cursor: 'pointer',\n              py: 1.5,\n              px: 2,\n              transition: 'all 0.2s ease-in-out',\n              backgroundColor: column.selectedItem?.name === item.name ? alpha(theme.palette.primary.main, 0.04) : 'transparent',\n              borderLeft: column.selectedItem?.name === item.name ? `2px solid ${theme.palette.primary.main}` : '2px solid transparent',\n              borderRadius: '8px',\n              mx: 1,\n              '&:hover': {\n                backgroundColor: column.selectedItem?.name === item.name ? alpha(theme.palette.primary.main, 0.04) : alpha('#f5f5f5', 0.5),\n                transform: 'translateX(2px)'\n              },\n            }}\n          >\n            <ListItemIcon sx={{ \n              minWidth: 32,\n              color: column.selectedItem?.name === item.name ? theme.palette.primary.main : alpha('#000', 0.5),\n              transition: 'all 0.2s ease-in-out'\n            }}>\n              {item.type === 'folder' ? (\n                <Box sx={{ \n                  display: 'flex', \n                  alignItems: 'center',\n                  transition: 'transform 0.2s ease-in-out',\n                  transform: column.selectedItem?.name === item.name ? 'scale(1.1)' : 'scale(1)'\n                }}>\n                  {column.selectedItem?.name === item.name ? <FolderOpenIcon sx={{ fontSize: 20 }} /> : <FolderIcon sx={{ fontSize: 20 }} />}\n                  <ChevronRightIcon sx={{ \n                    ml: 0.5, \n                    fontSize: 16,\n                    opacity: 0.7,\n                    transition: 'transform 0.2s ease-in-out',\n                    transform: column.selectedItem?.name === item.name ? 'rotate(90deg)' : 'rotate(0deg)'\n                  }} />\n                </Box>\n              ) : (\n                <InsertDriveFileIcon sx={{ fontSize: 20 }} />\n              )}\n            </ListItemIcon>\n            <ListItemText \n              primary={item.name}\n              sx={{\n                '& .MuiTypography-root': {\n                  color: column.selectedItem?.name === item.name ? theme.palette.primary.main : alpha('#000', 0.7),\n                  transition: 'all 0.2s ease-in-out',\n                  fontSize: '0.875rem',\n                  fontWeight: item.type === 'folder' ? 500 : 400,\n                  lineHeight: 1.5,\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  whiteSpace: 'nowrap'\n                }\n              }}\n            />\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n\n  const renderPath = (ref: React.RefObject<HTMLDivElement | null>, isClickable: boolean = true, isDetailsPanelPath: boolean = false) => (\n    <Box\n      ref={ref}\n      sx={{ \n        display: 'flex',\n        overflowX: 'auto',\n        py: isDetailsPanelPath ? 1.5 : 0.5,\n        px: isDetailsPanelPath ? 2 : 0,\n        pl: isDetailsPanelPath ? 2 : 0.8,\n        bgcolor: isDetailsPanelPath ? alpha('#f8f9fa', 0.8) : 'white',\n        borderBottom: isDetailsPanelPath ? '1px solid' : 'none',\n        borderColor: 'divider',\n        position: 'relative',\n        '&::-webkit-scrollbar': { display: 'none' },\n        scrollbarWidth: 'none',  // Firefox\n        msOverflowStyle: 'none',  // IE and Edge\n        ...(isDetailsPanelPath && {\n          '&::after': {\n            content: '\"\"',\n            position: 'absolute',\n            bottom: -1,\n            left: 0,\n            right: 0,\n            height: 4,\n            background: 'linear-gradient(180deg, rgba(0,0,0,0.03) 0%, rgba(0,0,0,0) 100%)'\n          }\n        })\n      }}\n    >\n      <Box sx={{ \n        display: 'flex', \n        alignItems: 'center',\n        ...(isDetailsPanelPath && {\n          '&::before': {\n            content: '\"Path:\"',\n            color: '#666666',\n            fontSize: '0.75rem',\n            fontWeight: 500,\n            marginRight: 1.5,\n            textTransform: 'uppercase',\n            letterSpacing: '0.5px'\n          }\n        })\n      }}>\n        {selectedDetails?.path?.map((item: string, index: number) => (\n          <React.Fragment key={index}>\n            {index > 0 && (\n              <ChevronRightIcon \n                sx={{ \n                  mx: 0.25,\n                  fontSize: isDetailsPanelPath ? 18 : 16,\n                  color: isDetailsPanelPath ? alpha('#666666', 0.5) : '#666666',\n                  verticalAlign: 'middle'\n                }} \n              />\n            )}\n            <Box\n              onClick={() => isClickable && handlePathClick(index, isDetailsPanelPath)}\n              sx={{\n                py: 0.5,\n                px: 1,\n                display: 'flex',\n                alignItems: 'center',\n                whiteSpace: 'nowrap',\n                color: index === (selectedDetails?.path?.length ?? 0) - 1 \n                  ? '#0066cc' \n                  : isDetailsPanelPath \n                    ? '#1a1a1a'\n                    : '#666666',\n                fontWeight: index === (selectedDetails?.path?.length ?? 0) - 1 ? 600 : 400,\n                fontSize: isDetailsPanelPath ? '0.875rem' : '0.8125rem',\n                cursor: isClickable ? 'pointer' : 'default',\n                backgroundColor: isDetailsPanelPath && selectedPathIndex === index ? alpha('#0066cc', 0.08) : 'transparent',\n                border: isDetailsPanelPath && selectedPathIndex === index ? '1px solid' : '1px solid transparent',\n                borderColor: isDetailsPanelPath && selectedPathIndex === index ? alpha('#0066cc', 0.2) : 'transparent',\n                borderRadius: '4px',\n                transition: 'all 0.2s ease-in-out',\n                '&:hover': isClickable ? {\n                  color: '#0066cc',\n                  backgroundColor: alpha('#0066cc', 0.04),\n                  ...(isDetailsPanelPath && {\n                    transform: 'translateY(-1px)',\n                    boxShadow: `0 2px 4px ${alpha('#000', 0.05)}`\n                  })\n                } : {},\n                ...(isDetailsPanelPath && {\n                  display: 'inline-flex',\n                  alignItems: 'center',\n                  gap: 0.5,\n                  '&::before': {\n                    content: index === 0 ? '\"📁\"' : \n                             index === (selectedDetails?.path?.length ?? 0) - 1 ? '\"📄\"' : '\"📂\"',\n                    fontSize: '1rem',\n                    opacity: 0.8\n                  }\n                })\n              }}\n            >\n              {item}\n            </Box>\n          </React.Fragment>\n        ))}\n      </Box>\n    </Box>\n  );\n\n  const renderDetailsPanel = () => {\n    if (!selectedDetails) {\n      return null;\n    }\n\n    return (\n      <Paper sx={{ \n        width: 320,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n        borderRadius: '12px',\n        boxShadow: `0 2px 12px ${alpha('#000', 0.04)}`,\n      }}>\n        {/* Path Navigation with enhanced styling */}\n        {selectedDetails?.path?.length > 0 && renderPath(detailsPathScrollRef, true, true)}\n\n        {/* Details Content */}\n        <Box sx={{ \n          flex: 1, \n          overflow: 'auto',\n          p: 2\n        }}>\n          <Box sx={{ mb: 3 }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom sx={{ \n              fontSize: '0.75rem', \n              fontWeight: 600, \n              textTransform: 'uppercase', \n              letterSpacing: '0.5px',\n              color: alpha('#000', 0.5)\n            }}>\n              Description\n            </Typography>\n            <Typography variant=\"body2\" sx={{ \n              color: alpha('#000', 0.7), \n              fontSize: '0.875rem', \n              lineHeight: 1.6 \n            }}>\n              {selectedDetails.description}\n            </Typography>\n          </Box>\n\n          {/* Add XDM Path for attributes (files) */}\n          {selectedDetails.type === 'file' && selectedDetails.xdmPath && (\n            <Box sx={{ mb: 3 }}>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom sx={{ \n                fontSize: '0.75rem', \n                fontWeight: 600, \n                textTransform: 'uppercase', \n                letterSpacing: '0.5px',\n                color: alpha('#000', 0.5)\n              }}>\n                XDM Path\n              </Typography>\n              <Typography variant=\"body2\" sx={{ \n                wordBreak: 'break-all',\n                backgroundColor: alpha('#f5f5f5', 0.5),\n                p: 1.5,\n                borderRadius: '8px',\n                fontSize: '0.75rem',\n                fontFamily: 'monospace',\n                color: alpha('#000', 0.7),\n                lineHeight: 1.5\n              }}>\n                {selectedDetails.xdmPath}\n              </Typography>\n            </Box>\n          )}\n\n          <Box sx={{ mb: 3 }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom sx={{ \n              fontSize: '0.75rem', \n              fontWeight: 600, \n              textTransform: 'uppercase', \n              letterSpacing: '0.5px',\n              color: alpha('#000', 0.5)\n            }}>\n              Status\n            </Typography>\n            <Chip\n              label={selectedDetails.status}\n              size=\"small\"\n              sx={{\n                backgroundColor: selectedDetails.status === 'Active' \n                  ? alpha(theme.palette.success.main, 0.1)\n                  : alpha(theme.palette.warning.main, 0.1),\n                color: selectedDetails.status === 'Active'\n                  ? theme.palette.success.main\n                  : theme.palette.warning.main,\n                fontWeight: 500,\n                '& .MuiChip-label': {\n                  px: 1.5,\n                  fontSize: '0.75rem'\n                }\n              }}\n            />\n          </Box>\n\n          {selectedDetails.type === 'folder' ? (\n            <>\n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom sx={{ \n                  fontSize: '0.75rem', \n                  fontWeight: 600, \n                  textTransform: 'uppercase', \n                  letterSpacing: '0.5px',\n                  color: alpha('#000', 0.5)\n                }}>\n                  Usage Count\n                </Typography>\n                <Typography variant=\"body2\" sx={{ \n                  color: alpha('#000', 0.7), \n                  fontSize: '0.875rem',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 1\n                }}>\n                  <BarChartIcon sx={{ fontSize: 16, color: theme.palette.primary.main }} />\n                  {selectedDetails.usageCount?.toLocaleString()} references\n                </Typography>\n              </Box>\n            </>\n          ) : (\n            <>\n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom sx={{ \n                  fontSize: '0.75rem', \n                  fontWeight: 600, \n                  textTransform: 'uppercase', \n                  letterSpacing: '0.5px',\n                  color: alpha('#000', 0.5)\n                }}>\n                  Data Type\n                </Typography>\n                <Chip\n                  label={selectedDetails.dataType}\n                  size=\"small\"\n                  sx={{\n                    backgroundColor: alpha(theme.palette.primary.main, 0.1),\n                    color: theme.palette.primary.main,\n                    fontWeight: 500,\n                    '& .MuiChip-label': {\n                      px: 1.5,\n                      fontSize: '0.75rem'\n                    }\n                  }}\n                />\n              </Box>\n\n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom sx={{ \n                  fontSize: '0.75rem', \n                  fontWeight: 600, \n                  textTransform: 'uppercase', \n                  letterSpacing: '0.5px',\n                  color: alpha('#000', 0.5)\n                }}>\n                  Value\n                </Typography>\n                <Typography variant=\"body2\" sx={{ \n                  wordBreak: 'break-all',\n                  backgroundColor: alpha('#f5f5f5', 0.5),\n                  p: 1.5,\n                  borderRadius: '8px',\n                  fontSize: '0.75rem',\n                  fontFamily: 'monospace',\n                  color: alpha('#000', 0.7),\n                  lineHeight: 1.5\n                }}>\n                  {JSON.stringify(selectedDetails.value, null, 2)}\n                </Typography>\n              </Box>\n            </>\n          )}\n\n          <Divider sx={{ my: 2, opacity: 0.08 }} />\n\n          <Box sx={{ mb: 2 }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom sx={{ \n              fontSize: '0.75rem', \n              fontWeight: 600, \n              textTransform: 'uppercase', \n              letterSpacing: '0.5px',\n              color: alpha('#000', 0.5)\n            }}>\n              Owner\n            </Typography>\n            <Typography variant=\"body2\" sx={{ \n              color: alpha('#000', 0.7), \n              fontSize: '0.875rem',\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1\n            }}>\n              <PersonIcon sx={{ fontSize: 16, color: alpha('#000', 0.5) }} />\n              {selectedDetails.owner}\n            </Typography>\n          </Box>\n\n          <Box sx={{ mb: selectedDetails.type === 'file' ? 3 : 0 }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom sx={{ \n              fontSize: '0.75rem', \n              fontWeight: 600, \n              textTransform: 'uppercase', \n              letterSpacing: '0.5px',\n              color: alpha('#000', 0.5)\n            }}>\n              Last Modified\n            </Typography>\n            <Typography variant=\"body2\" sx={{ \n              color: alpha('#000', 0.7), \n              fontSize: '0.875rem' \n            }}>\n              {selectedDetails.lastModified}\n            </Typography>\n          </Box>\n\n          {/* Show View More button only for attributes (files) */}\n          {selectedDetails.type === 'file' && (\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              onClick={handleViewMore}\n              sx={{\n                textTransform: 'none',\n                borderRadius: '8px',\n                boxShadow: 'none',\n                mt: 1,\n                fontSize: '0.875rem',\n                py: 1,\n                px: 2,\n                '&:hover': {\n                  boxShadow: 'none',\n                }\n              }}\n            >\n              View More Details\n            </Button>\n          )}\n        </Box>\n      </Paper>\n    );\n  };\n\n  // Function to get description for an attribute\n  const getAttributeDescription = (attributeName: string): string => {\n    const descriptions: Record<string, string> = {\n      // User Details - Identity\n      'firstName': 'The user\\'s first name from their profile.',\n      'lastName': 'The user\\'s last name from their profile.',\n      'countryCode': 'The country code associated with the user\\'s address.',\n      'userAccountCreationDate': 'The date when the user\\'s account was created.',\n      'isAdobeEmployee': 'Indicates whether the user is an Adobe employee.',\n      \n      // User Details - Email\n      'address': 'The user\\'s email address.',\n      'emailDomain': 'The domain portion of the user\\'s email address.',\n      'hashedEmail': 'Hashed version of the user\\'s email for security.',\n      'emailValidFlag': 'Indicates if the email has been validated.',\n      \n      // Email Marketing Permission\n      'emailMarketingPermission': 'User\\'s consent status for email marketing.',\n      'val': 'The actual permission value for email marketing.',\n      'time': 'Timestamp of when the permission was last updated.',\n      \n      // Individual Entitlements\n      'numberOfEntitledProducts': 'Total number of products the user is entitled to.',\n      'productInfo': 'Detailed information about entitled products.',\n      'productCode': 'Unique code identifying the product.',\n      'productName': 'Name of the entitled product.',\n      'productID': 'Unique identifier for the product.',\n      'family': 'Product family grouping.',\n      'bundleID': 'Identifier for the product bundle.',\n      \n      // Team Entitlements\n      'contractInfo': 'Information about the team\\'s contract.',\n      'buyingProgram': 'The program through which the contract was purchased.',\n      'contractStartDTS': 'Contract start date.',\n      'contractEndDTS': 'Contract end date.',\n      'contractStatus': 'Current status of the contract.',\n      'contractType': 'Type of contract.',\n      'adminRoles': 'Administrative roles assigned in the contract.',\n      \n      // Models and Scores\n      'overallScore': 'Aggregate score based on user behavior and attributes.',\n      'modelScore': 'Raw score from the predictive model.',\n      'modelPercentileScore': 'Percentile rank of the model score.',\n      'modelScoreDate': 'Date when the score was last calculated.',\n      'modelUserSegment': 'User segment based on the model score.',\n      \n      // Product Activity\n      'installs': 'Product installation events.',\n      'launches': 'Product launch events.',\n      'desktop': 'Activity on desktop platforms.',\n      'mobile': 'Activity on mobile platforms.',\n      'web': 'Activity on web platforms.'\n    };\n\n    // Convert the attribute name to lowercase and remove spaces for matching\n    const normalizedName = attributeName.toLowerCase().replace(/\\s+/g, '');\n    \n    // Try to find a direct match first\n    if (descriptions[attributeName]) {\n      return descriptions[attributeName];\n    }\n    \n    // Try to find a match with the normalized name\n    const matchingKey = Object.keys(descriptions).find(key => \n      key.toLowerCase().replace(/\\s+/g, '') === normalizedName\n    );\n    \n    if (matchingKey) {\n      return descriptions[matchingKey];\n    }\n    \n    // Default description if no match is found\n    return 'A structured attribute used for data organization and management.';\n  };\n\n  return (\n    <Box sx={{ \n      display: 'flex', \n      flexDirection: 'column',\n      height: '100%',\n      position: 'relative'\n    }}>\n      {/* Search Overlay */}\n      <Box\n        sx={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(255, 255, 255, 0.6)',\n          backdropFilter: 'blur(8px)',\n          zIndex: 1200,\n          display: isSearchExpanded ? 'flex' : 'none',\n          alignItems: 'flex-start',\n          justifyContent: 'center',\n          pt: '15vh',\n          opacity: isSearchExpanded ? 1 : 0,\n          transition: 'opacity 0.4s cubic-bezier(0.16, 1, 0.3, 1)',\n          animation: isSearchExpanded ? 'fadeIn 0.4s cubic-bezier(0.16, 1, 0.3, 1)' : 'none',\n          '@keyframes fadeIn': {\n            '0%': {\n              opacity: 0,\n            },\n            '100%': {\n              opacity: 1,\n            }\n          }\n        }}\n        onClick={() => setIsSearchExpanded(false)}\n      >\n        <Box\n          sx={{\n            width: '90%',\n            maxWidth: '1000px',\n            backgroundColor: 'white',\n            borderRadius: '16px',\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\n            p: 3,\n            transform: isSearchExpanded ? 'translateY(0)' : 'translateY(-20px)',\n            opacity: isSearchExpanded ? 1 : 0,\n            transition: 'all 0.5s cubic-bezier(0.16, 1, 0.3, 1)',\n            maxHeight: '70vh',\n            display: 'flex',\n            flexDirection: 'column',\n            animation: isSearchExpanded ? 'slideIn 0.5s cubic-bezier(0.16, 1, 0.3, 1)' : 'none',\n            '@keyframes slideIn': {\n              '0%': {\n                transform: 'translateY(-20px)',\n                opacity: 0,\n              },\n              '100%': {\n                transform: 'translateY(0)',\n                opacity: 1,\n              }\n            }\n          }}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TextField\n            autoFocus\n            inputRef={searchInputRef}\n            fullWidth\n            placeholder=\"Search attributes, events, or values...\"\n            value={searchQuery}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchQuery(e.target.value)}\n            size=\"medium\"\n            sx={{\n              '& .MuiOutlinedInput-root': {\n                borderRadius: '12px',\n                backgroundColor: alpha('#fff', 0.8),\n                '& fieldset': {\n                  borderColor: alpha(theme.palette.divider, 0.1),\n                },\n                '&:hover fieldset': {\n                  borderColor: alpha(theme.palette.primary.main, 0.3),\n                },\n                '&.Mui-focused fieldset': {\n                  borderColor: alpha(theme.palette.primary.main, 0.5),\n                }\n              },\n              animation: isSearchExpanded ? 'fadeIn 0.6s cubic-bezier(0.16, 1, 0.3, 1)' : 'none',\n              '@keyframes fadeIn': {\n                '0%': {\n                  opacity: 0,\n                },\n                '100%': {\n                  opacity: 1,\n                }\n              }\n            }}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon sx={{ \n                    fontSize: 24, \n                    color: alpha('#000', 0.4),\n                    animation: isSearchExpanded ? 'pulse 1s cubic-bezier(0.16, 1, 0.3, 1)' : 'none',\n                    '@keyframes pulse': {\n                      '0%': {\n                        transform: 'scale(0.8)',\n                        opacity: 0.5,\n                      },\n                      '50%': {\n                        transform: 'scale(1.1)',\n                      },\n                      '100%': {\n                        transform: 'scale(1)',\n                        opacity: 1,\n                      }\n                    }\n                  }} />\n                </InputAdornment>\n              ),\n            }}\n          />\n          \n          {/* Search Results */}\n          <Box sx={{ \n            mt: 3, \n            overflow: 'auto',\n            maxHeight: '50vh',\n            '&::-webkit-scrollbar': { width: 4 },\n            '&::-webkit-scrollbar-track': { backgroundColor: 'transparent' },\n            '&::-webkit-scrollbar-thumb': {\n              backgroundColor: alpha('#000', 0.08),\n              borderRadius: 2,\n              '&:hover': { backgroundColor: alpha('#000', 0.15) }\n            },\n            animation: isSearchExpanded ? 'fadeIn 0.7s cubic-bezier(0.16, 1, 0.3, 1)' : 'none',\n            '@keyframes fadeIn': {\n              '0%': {\n                opacity: 0,\n              },\n              '100%': {\n                opacity: 1,\n              }\n            }\n          }}>\n            {searchQuery.trim() ? (\n              searchResults.length > 0 ? (\n                <List>\n                  {searchResults.map((result: TreeNode, index: number) => (\n                    <ListItem\n                      key={index}\n                      onClick={() => navigateToSearchResult(result)}\n                      sx={{\n                        cursor: 'pointer',\n                        py: 1.5,\n                        px: 2,\n                        transition: 'all 0.2s ease-in-out',\n                        borderRadius: '8px',\n                        '&:hover': {\n                          backgroundColor: alpha(theme.palette.primary.main, 0.04),\n                          transform: 'translateX(2px)'\n                        },\n                      }}\n                    >\n                      <ListItemIcon sx={{ \n                        minWidth: 32,\n                        color: alpha('#000', 0.5),\n                      }}>\n                        {result.type === 'folder' ? (\n                          <FolderIcon sx={{ fontSize: 20 }} />\n                        ) : (\n                          <InsertDriveFileIcon sx={{ fontSize: 20 }} />\n                        )}\n                      </ListItemIcon>\n                      <Box sx={{ flex: 1 }}>\n                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 0.5 }}>\n                          <Typography\n                            sx={{\n                              fontSize: '0.875rem',\n                              fontWeight: 600,\n                              color: alpha('#000', 0.87)\n                            }}\n                          >\n                            {result.name}\n                          </Typography>\n                          {result.dataOwner && (\n                            <Chip\n                              label={`Owner: ${result.dataOwner}`}\n                              size=\"small\"\n                              sx={{\n                                height: 20,\n                                fontSize: '0.625rem',\n                                fontWeight: 500,\n                                backgroundColor: alpha('#9C27B0', 0.1),\n                                color: '#9C27B0',\n                              }}\n                            />\n                          )}\n                          {result.dataSource && (\n                            <Chip\n                              label={`Source: ${result.dataSource}`}\n                              size=\"small\"\n                              sx={{\n                                height: 20,\n                                fontSize: '0.625rem',\n                                fontWeight: 500,\n                                backgroundColor: alpha('#2196F3', 0.1),\n                                color: '#2196F3',\n                              }}\n                            />\n                          )}\n                          {result.latency && (\n                            <Chip\n                              label={`Latency: ${result.latency}`}\n                              size=\"small\"\n                              sx={{\n                                height: 20,\n                                fontSize: '0.625rem',\n                                fontWeight: 500,\n                                backgroundColor: alpha('#4CAF50', 0.1),\n                                color: '#4CAF50',\n                              }}\n                            />\n                          )}\n                        </Box>\n                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                          <Typography\n                            sx={{\n                              fontSize: '0.75rem',\n                              color: alpha('#000', 0.5),\n                              display: 'flex',\n                              alignItems: 'center',\n                              gap: 0.5\n                            }}\n                          >\n                            <FolderOpenIcon sx={{ fontSize: 16 }} />\n                            {getPathToNode(result, transformToTree(transformUserData(userData))).join(' > ')}\n                          </Typography>\n                        </Box>\n                      </Box>\n                    </ListItem>\n                  ))}\n                </List>\n              ) : (\n                <Box sx={{ \n                  p: 3, \n                  textAlign: 'center',\n                  color: alpha('#000', 0.5)\n                }}>\n                  <Typography variant=\"body1\">\n                    No results found for \"{searchQuery}\"\n                  </Typography>\n                </Box>\n              )\n            ) : (\n              <Box sx={{ \n                p: 3, \n                textAlign: 'center',\n                color: alpha('#000', 0.5)\n              }}>\n                <Typography variant=\"body1\">\n                  Start typing to search...\n                </Typography>\n              </Box>\n            )}\n          </Box>\n        </Box>\n      </Box>\n\n      {/* Add a style to blur the side navigation when search is expanded */}\n      <style>\n        {`\n          body.search-overlay-active nav,\n          body.search-overlay-active aside {\n            filter: blur(8px);\n            transition: filter 0.3s ease;\n          }\n        `}\n      </style>\n\n      <Box sx={{ \n        p: '16px 24px', \n        flexShrink: 0,\n        backgroundColor: 'white',\n        borderBottom: '1px solid',\n        borderColor: alpha(theme.palette.divider, 0.08),\n        position: 'sticky',\n        top: 0,\n        zIndex: 10,\n      }}>\n        <Box sx={{ \n          display: 'flex', \n          justifyContent: 'space-between', \n          alignItems: 'center',\n          width: '100%'\n        }}>\n          <ToggleButtonGroup\n            value={tabValue}\n            exclusive\n            onChange={handleNavigationChange}\n            aria-label=\"navigation type\"\n            sx={{\n              justifyContent: 'flex-start',\n              '& .MuiToggleButton-root': {\n                textTransform: 'none',\n                px: 2,\n                py: 1,\n                border: 'none',\n                borderRadius: '8px',\n                mx: 0,\n                mr: 1,\n                '&.Mui-selected': {\n                  backgroundColor: alpha(theme.palette.primary.main, 0.08),\n                  color: theme.palette.primary.main,\n                  '&:hover': {\n                    backgroundColor: alpha(theme.palette.primary.main, 0.12),\n                  }\n                },\n                '&:hover': {\n                  backgroundColor: alpha('#000', 0.04),\n                }\n              }\n            }}\n          >\n            {navigationOptions.map((option, index) => (\n              <ToggleButton key={index} value={index} aria-label={option.label}>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                  {option.icon}\n                  <Typography sx={{ fontSize: '0.875rem', fontWeight: 500 }}>\n                    {option.label}\n                  </Typography>\n                </Box>\n              </ToggleButton>\n            ))}\n          </ToggleButtonGroup>\n          \n          <TextField\n            placeholder=\"Search...\"\n            value={searchQuery}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchQuery(e.target.value)}\n            onClick={() => setIsSearchExpanded(true)}\n            size=\"small\"\n            sx={{\n              width: '500px',\n              '& .MuiOutlinedInput-root': {\n                borderRadius: '8px',\n                backgroundColor: alpha('#fff', 0.8),\n                '& fieldset': {\n                  borderColor: alpha(theme.palette.divider, 0.1),\n                },\n                '&:hover fieldset': {\n                  borderColor: alpha(theme.palette.primary.main, 0.3),\n                },\n                '&.Mui-focused fieldset': {\n                  borderColor: alpha(theme.palette.primary.main, 0.5),\n                }\n              }\n            }}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon sx={{ fontSize: 18, color: alpha('#000', 0.4) }} />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Box>\n      </Box>\n\n      {/* Content Area */}\n      <Box sx={{ \n        flex: 1, \n        minHeight: 0, \n        display: 'flex', \n        flexDirection: 'column',\n        position: 'relative',\n        p: '16px 24px',\n        gap: 2\n      }}>\n        <Box sx={{ display: 'flex', gap: 2, flex: 1, minHeight: 0 }}>\n          {/* Navigation Columns */}\n          <Box sx={{ \n            flex: 1,\n            backgroundColor: 'white',\n            overflow: 'hidden',\n            display: 'flex',\n            borderRadius: '12px',\n            boxShadow: `0 2px 12px ${alpha('#000', 0.04)}`,\n          }}>\n            <Box \n              ref={scrollContainerRef}\n              sx={{ \n                flex: 1,\n                display: 'flex',\n                overflowX: 'auto',\n                overflowY: 'hidden',\n                scrollBehavior: 'smooth',\n                '&::-webkit-scrollbar': { height: 4 },\n                '&::-webkit-scrollbar-track': { backgroundColor: 'transparent' },\n                '&::-webkit-scrollbar-thumb': { \n                  backgroundColor: alpha('#000', 0.08),\n                  borderRadius: 2,\n                  '&:hover': { backgroundColor: alpha('#000', 0.15) }\n                }\n              }}\n            >\n              {columns.map((column: ColumnData, index: number) => renderColumn(column, index))}\n              {columns.length === 1 && (\n                <Box\n                  sx={{\n                    width: '100%',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    backgroundColor: alpha(theme.palette.background.paper, 0.5),\n                    color: alpha('#000', 0.4),\n                    flexDirection: 'column',\n                    gap: 1.5,\n                    p: 4\n                  }}\n                >\n                  <FolderIcon sx={{ fontSize: 40, color: alpha('#000', 0.12) }} />\n                  <Typography variant=\"h6\" sx={{ \n                    color: alpha('#000', 0.6),\n                    fontWeight: 500,\n                  }}>\n                    No Items Selected\n                  </Typography>\n                  <Typography variant=\"body2\" align=\"center\" sx={{ \n                    maxWidth: 300,\n                    color: alpha('#000', 0.4),\n                    fontSize: '0.875rem',\n                    lineHeight: 1.5\n                  }}>\n                    Select a folder to explore its contents and view detailed information\n                  </Typography>\n                </Box>\n              )}\n            </Box>\n          </Box>\n\n          {/* Details Panel */}\n          {renderDetailsPanel()}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default DataWizard; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SACEC,GAAG,EACHC,UAAU,EACVC,SAAS,EACTC,KAAK,EACLC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,YAAY,EAGZC,KAAK,EACLC,MAAM,EAONC,iBAAiB,EACjBC,YAAY,EACZC,IAAI,EACJC,OAAO,EACPC,cAAc,QACT,eAAe;AACtB,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,mBAAmB,MAAM,qCAAqC;AACrE,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,YAAY,MAAM,8BAA8B;AAEvD,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,UAAU,MAAM,4BAA4B;AACnD,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAC/D,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE,SAASC,eAAe,QAAoD,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AA2DxG;AACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAMC,IAAI,GAAG,EAAE;EACf,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EAExB,KAAK,IAAIC,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC5B,MAAMC,IAAI,GAAG,IAAIF,IAAI,CAACD,KAAK,CAAC;IAC5BG,IAAI,CAACC,OAAO,CAACD,IAAI,CAACE,OAAO,CAAC,CAAC,GAAGH,CAAC,CAAC;IAEhCH,IAAI,CAACO,IAAI,CAAC;MACRH,IAAI,EAAEA,IAAI,CAACI,kBAAkB,CAAC,OAAO,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAU,CAAC,CAAC;MAC1EC,KAAK,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG;IAC5C,CAAC,CAAC;EACJ;EAEA,OAAOd,IAAI;AACb,CAAC;;AAED;AACA,MAAMe,kBAAkB,GAAG,CACzB;EAAEC,IAAI,EAAE,eAAe;EAAEC,WAAW,EAAE,8CAA8C;EAAEC,QAAQ,EAAE;AAAQ,CAAC,EACzG;EAAEF,IAAI,EAAE,yBAAyB;EAAEC,WAAW,EAAE,wCAAwC;EAAEC,QAAQ,EAAE;AAAO,CAAC,EAC5G;EAAEF,IAAI,EAAE,eAAe;EAAEC,WAAW,EAAE,gDAAgD;EAAEC,QAAQ,EAAE;AAAM,CAAC,EACzG;EAAEF,IAAI,EAAE,uBAAuB;EAAEC,WAAW,EAAE,4CAA4C;EAAEC,QAAQ,EAAE;AAAO,CAAC,CAC/G;AAED,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG1D,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC2D,WAAW,EAAEC,cAAc,CAAC,GAAG5D,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC6D,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG9D,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC+D,aAAa,EAAEC,gBAAgB,CAAC,GAAGhE,QAAQ,CAAa,EAAE,CAAC;EAClE,MAAMiE,cAAc,GAAGhE,MAAM,CAAmB,IAAI,CAAC;EACrD,MAAM,CAACiE,OAAO,EAAEC,UAAU,CAAC,GAAGnE,QAAQ,CAAe,CACnD;IAAEoE,KAAK,EAAEtC,eAAe,CAACD,iBAAiB,CAACD,QAAQ,CAAC,CAAC;IAAEyC,YAAY,EAAE;EAAK,CAAC,CAC5E,CAAC;EACF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGvE,QAAQ,CAAyB,IAAI,CAAC;EACpF,MAAM,CAACwE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzE,QAAQ,CAAW,EAAE,CAAC;EACtE,MAAM0E,kBAAkB,GAAGzE,MAAM,CAAiB,IAAI,CAAC;EACvD,MAAM0E,oBAAoB,GAAG1E,MAAM,CAAiB,IAAI,CAAC;EACzD,MAAM,CAAC2E,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG7E,QAAQ,CAAgB,IAAI,CAAC;EAC/E,MAAM8E,QAAQ,GAAGpD,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACqD,YAAY,CAAC,GAAGpD,eAAe,CAAC,CAAC;EACxC,MAAMqD,KAAK,GAAGvD,QAAQ,CAAC,CAAC;;EAExB;EACAvB,SAAS,CAAC,MAAM;IACd,MAAM+E,IAAI,GAAGF,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC;IACrC,MAAMC,QAAQ,GAAGJ,YAAY,CAACG,GAAG,CAAC,UAAU,CAAC;IAC7C,MAAME,MAAM,GAAGL,YAAY,CAACG,GAAG,CAAC,QAAQ,CAAC,KAAK,MAAM;IAEpD,IAAID,IAAI,IAAIE,QAAQ,EAAE;MACpB,MAAME,eAAe,GAAGxD,iBAAiB,CAACD,QAAQ,CAAC;MACnD,MAAM0D,QAAQ,GAAGxD,eAAe,CAACuD,eAAe,CAAC;MACjD,MAAME,SAAS,GAAGN,IAAI,GAAGA,IAAI,CAACO,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;;MAE7C;MACA,MAAMC,UAAwB,GAAG,EAAE;MACnC,IAAIC,YAAY,GAAGJ,QAAQ;MAC3B,IAAIjB,YAA6B,GAAG,IAAI;;MAExC;MACA,KAAK,MAAMsB,QAAQ,IAAIJ,SAAS,EAAE;QAChC,MAAMK,UAAU,GAAGF,YAAY,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAC1C,IAAI,KAAKuC,QAAQ,CAAC;QACpE,IAAIC,UAAU,EAAE;UACdH,UAAU,CAAC9C,IAAI,CAAC;YAAEyB,KAAK,EAAEsB,YAAY;YAAErB,YAAY,EAAEuB;UAAW,CAAC,CAAC;UAClEF,YAAY,GAAGE,UAAU,CAACG,QAAQ,IAAI,EAAE;QAC1C;MACF;;MAEA;MACA,IAAIZ,QAAQ,EAAE;QACZ,MAAMa,SAAS,GAAGN,YAAY,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAC1C,IAAI,KAAK+B,QAAQ,CAAC;QACnE,IAAIa,SAAS,EAAE;UAAA,IAAAC,qBAAA;UACb5B,YAAY,GAAG2B,SAAS;UACxB;UACA,IAAIP,UAAU,CAACS,MAAM,GAAG,CAAC,EAAE;YACzBT,UAAU,CAACA,UAAU,CAACS,MAAM,GAAG,CAAC,CAAC,GAAG;cAClC9B,KAAK,EAAEsB,YAAY;cACnBrB;YACF,CAAC;UACH,CAAC,MAAM;YACLoB,UAAU,CAAC9C,IAAI,CAAC;cAAEyB,KAAK,EAAEsB,YAAY;cAAErB;YAAa,CAAC,CAAC;UACxD;;UAEA;UACA,IAAIe,MAAM,IAAIf,YAAY,CAAC8B,IAAI,KAAK,QAAQ,KAAAF,qBAAA,GAAI5B,YAAY,CAAC0B,QAAQ,cAAAE,qBAAA,eAArBA,qBAAA,CAAuBC,MAAM,EAAE;YAC7ET,UAAU,CAAC9C,IAAI,CAAC;cAAEyB,KAAK,EAAEC,YAAY,CAAC0B,QAAQ;cAAE1B,YAAY,EAAE;YAAK,CAAC,CAAC;UACvE;;UAEA;UACA,MAAM+B,QAAQ,GAAGnB,IAAI,GAAG,CAAC,GAAGM,SAAS,EAAEJ,QAAQ,CAAC,GAAG,CAACA,QAAQ,CAAC;UAC7D,MAAMkB,OAAO,GAAGC,cAAc,CAACjC,YAAY,EAAE+B,QAAQ,CAAC;UACtD7B,kBAAkB,CAAC8B,OAAO,CAAC;;UAE3B;UACAE,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE;YACvCpD,IAAI,EAAEiB,YAAY,CAACjB,IAAI;YACvB6B,IAAI,EAAEmB,QAAQ;YACdC;UACF,CAAC,CAAC;QACJ;MACF;MAEAlC,UAAU,CAACsB,UAAU,CAAC;IACxB;EACF,CAAC,EAAE,CAACV,YAAY,CAAC,CAAC;;EAElB;EACA7E,SAAS,CAAC,MAAM;IACdqG,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAElC,eAAe,CAAC;EAC3D,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;;EAErB;EACApE,SAAS,CAAC,MAAM;IACd,IAAIwE,kBAAkB,CAAC+B,OAAO,EAAE;MAC9B/B,kBAAkB,CAAC+B,OAAO,CAACC,QAAQ,CAAC;QAClCC,IAAI,EAAEjC,kBAAkB,CAAC+B,OAAO,CAACG,WAAW;QAC5CC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;IACA,IAAIlC,oBAAoB,CAAC8B,OAAO,EAAE;MAChC9B,oBAAoB,CAAC8B,OAAO,CAACC,QAAQ,CAAC;QACpCC,IAAI,EAAEhC,oBAAoB,CAAC8B,OAAO,CAACG,WAAW;QAC9CC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAC3C,OAAO,CAACgC,MAAM,EAAE5B,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEW,IAAI,CAACiB,MAAM,CAAC,CAAC;;EAElD;EACAhG,SAAS,CAAC,MAAM;IACd,IAAIyD,WAAW,CAACmD,IAAI,CAAC,CAAC,EAAE;MACtB,MAAMzB,eAAe,GAAGxD,iBAAiB,CAACD,QAAQ,CAAC;MACnD,MAAMmF,OAAO,GAAGC,YAAY,CAAClF,eAAe,CAACuD,eAAe,CAAC,EAAE1B,WAAW,CAACsD,WAAW,CAAC,CAAC,CAAC;MACzFjD,gBAAgB,CAAC+C,OAAO,CAAC;IAC3B,CAAC,MAAM;MACL/C,gBAAgB,CAAC,EAAE,CAAC;IACtB;EACF,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;;EAEjB;EACAzD,SAAS,CAAC,MAAM;IACd,IAAI2D,gBAAgB,IAAII,cAAc,CAACwC,OAAO,EAAE;MAC9C;MACAS,UAAU,CAAC,MAAM;QAAA,IAAAC,qBAAA;QACf,CAAAA,qBAAA,GAAAlD,cAAc,CAACwC,OAAO,cAAAU,qBAAA,uBAAtBA,qBAAA,CAAwBC,KAAK,CAAC,CAAC;MACjC,CAAC,EAAE,GAAG,CAAC;IACT;EACF,CAAC,EAAE,CAACvD,gBAAgB,CAAC,CAAC;;EAEtB;EACA3D,SAAS,CAAC,MAAM;IACd,IAAI2D,gBAAgB,EAAE;MACpBwD,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtD,CAAC,MAAM;MACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,uBAAuB,CAAC;IACzD;IACA,OAAO,MAAM;MACXJ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,uBAAuB,CAAC;IACzD,CAAC;EACH,CAAC,EAAE,CAAC5D,gBAAgB,CAAC,CAAC;;EAEtB;EACA,MAAMmD,YAAY,GAAGA,CAACU,KAAiB,EAAEC,KAAa,KAAiB;IACrE,IAAIZ,OAAmB,GAAG,EAAE;IAE5B,KAAK,MAAMa,IAAI,IAAIF,KAAK,EAAE;MACxB;MACA,IAAIE,IAAI,CAACxE,IAAI,CAAC6D,WAAW,CAAC,CAAC,CAACY,QAAQ,CAACF,KAAK,CAAC,EAAE;QAC3CZ,OAAO,CAACpE,IAAI,CAACiF,IAAI,CAAC;MACpB;;MAEA;MACA,IAAIA,IAAI,CAACzB,IAAI,KAAK,QAAQ,IAAIyB,IAAI,CAAC7B,QAAQ,EAAE;QAC3C,MAAM+B,YAAY,GAAGd,YAAY,CAACY,IAAI,CAAC7B,QAAQ,EAAE4B,KAAK,CAAC;QACvDZ,OAAO,GAAG,CAAC,GAAGA,OAAO,EAAE,GAAGe,YAAY,CAAC;MACzC;IACF;IAEA,OAAOf,OAAO;EAChB,CAAC;;EAED;EACA,MAAMgB,aAAa,GAAGA,CAACH,IAAc,EAAEI,IAAgB,KAAe;IACpE,MAAMC,QAAQ,GAAGA,CAACC,WAAqB,EAAEC,UAAoB,EAAEC,WAAqB,KAAsB;MACxG,IAAIF,WAAW,CAAC9E,IAAI,KAAK+E,UAAU,CAAC/E,IAAI,EAAE;QACxC,OAAO,CAAC,GAAGgF,WAAW,EAAEF,WAAW,CAAC9E,IAAI,CAAC;MAC3C;MAEA,IAAI8E,WAAW,CAAC/B,IAAI,KAAK,QAAQ,IAAI+B,WAAW,CAACnC,QAAQ,EAAE;QACzD,KAAK,MAAMsC,KAAK,IAAIH,WAAW,CAACnC,QAAQ,EAAE;UACxC,MAAMd,IAAI,GAAGgD,QAAQ,CAACI,KAAK,EAAEF,UAAU,EAAE,CAAC,GAAGC,WAAW,EAAEF,WAAW,CAAC9E,IAAI,CAAC,CAAC;UAC5E,IAAI6B,IAAI,EAAE,OAAOA,IAAI;QACvB;MACF;MAEA,OAAO,IAAI;IACb,CAAC;IAED,KAAK,MAAMqD,QAAQ,IAAIN,IAAI,EAAE;MAC3B,MAAM/C,IAAI,GAAGgD,QAAQ,CAACK,QAAQ,EAAEV,IAAI,EAAE,EAAE,CAAC;MACzC,IAAI3C,IAAI,EAAE,OAAOA,IAAI;IACvB;IAEA,OAAO,CAAC2C,IAAI,CAACxE,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,MAAMmF,sBAAsB,GAAIC,MAAgB,IAAK;IACnD,MAAMnD,eAAe,GAAGxD,iBAAiB,CAACD,QAAQ,CAAC;IACnD,MAAMqD,IAAI,GAAG8C,aAAa,CAACS,MAAM,EAAE1G,eAAe,CAACuD,eAAe,CAAC,CAAC;;IAEpE;IACA,MAAMI,UAAwB,GAAG,EAAE;IACnC,IAAIC,YAAY,GAAG5D,eAAe,CAACuD,eAAe,CAAC;IAEnD,KAAK,MAAMM,QAAQ,IAAIV,IAAI,EAAE;MAC3B,MAAMW,UAAU,GAAGF,YAAY,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAC1C,IAAI,KAAKuC,QAAQ,CAAC;MACpE,IAAIC,UAAU,EAAE;QACdH,UAAU,CAAC9C,IAAI,CAAC;UAAEyB,KAAK,EAAEsB,YAAY;UAAErB,YAAY,EAAEuB;QAAW,CAAC,CAAC;QAClEF,YAAY,GAAGE,UAAU,CAACG,QAAQ,IAAI,EAAE;MAC1C;IACF;IAEA5B,UAAU,CAACsB,UAAU,CAAC;IACtBlB,kBAAkB,CAAC+B,cAAc,CAACkC,MAAM,EAAEvD,IAAI,CAAC,CAAC;IAChDnB,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAM2E,sBAAsB,GAAGA,CAACC,CAAgC,EAAEC,QAAgB,KAAK;IACrF,IAAIA,QAAQ,KAAK,IAAI,EAAE;MACrBjF,WAAW,CAACiF,QAAQ,CAAC;IACvB;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAG,CACxB;IACEC,KAAK,EAAE,oBAAoB;IAC3BC,IAAI,eAAE9G,OAAA,CAACR,UAAU;MAACuH,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC1C/F,WAAW,EAAE;EACf,CAAC,EACD;IACEwF,KAAK,EAAE,mBAAmB;IAC1BC,IAAI,eAAE9G,OAAA,CAACV,YAAY;MAACyH,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC5C/F,WAAW,EAAE;EACf,CAAC,EACD;IACEwF,KAAK,EAAE,mBAAmB;IAC1BC,IAAI,eAAE9G,OAAA,CAACX,UAAU;MAAC0H,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC1C/F,WAAW,EAAE;EACf,CAAC,CACF;EAED,MAAMiD,cAAc,GAAGA,CAACR,IAAc,EAAEb,IAAc,KAAsB;IAC1E,MAAMoE,WAAW,GAAG;MAClBjG,IAAI,EAAE0C,IAAI,CAAC1C,IAAI;MACfkG,KAAK,EAAExD,IAAI,CAACwD,KAAK;MACjBnD,IAAI,EAAEL,IAAI,CAACK,IAAI;MACflB,IAAI;MACJsE,YAAY,EAAE,IAAIjH,IAAI,CAACA,IAAI,CAACkH,GAAG,CAAC,CAAC,GAAGxG,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,WAAW,CAAC,CAACN,kBAAkB,CAAC,CAAC;MACrF6G,KAAK,EAAE,CAAC,iBAAiB,EAAE,YAAY,EAAE,YAAY,EAAE,cAAc,CAAC,CAACzG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IACtG,CAAC;;IAED;IACA,MAAMwG,eAAe,GAAIC,eAAyB,IAAa;MAC7D,MAAMC,YAAoC,GAAG;QAC3C;QACA,gCAAgC,EAAE,uBAAuB;QACzD,+BAA+B,EAAE,sBAAsB;QACvD,kCAAkC,EAAE,yBAAyB;QAC7D,8CAA8C,EAAE,oEAAoE;QACpH,sCAAsC,EAAE,8BAA8B;QAEtE;QACA,2BAA2B,EAAE,uBAAuB;QACpD,+BAA+B,EAAE,0BAA0B;QAC3D,+BAA+B,EAAE,0BAA0B;QAC3D,kCAAkC,EAAE,6BAA6B;QAEjE;QACA,0BAA0B,EAAE,wBAAwB;QACpD,4BAA4B,EAAE,wBAAwB;QACtD,8BAA8B,EAAE,4BAA4B;QAC5D,+BAA+B,EAAE,6BAA6B;QAE9D;QACA,wBAAwB,EAAE,2BAA2B;QACrD,yBAAyB,EAAE,2BAA2B;QACtD,iDAAiD,EAAE,oDAAoD;QAEvG;QACA,kBAAkB,EAAE,yCAAyC;QAC7D,mBAAmB,EAAE,yCAAyC;QAE9D;QACA,8BAA8B,EAAE,yDAAyD;QACzF,iCAAiC,EAAE,yDAAyD;QAE5F;QACA,iBAAiB,EAAE,gDAAgD;QACnE,kBAAkB,EAAE;MACtB,CAAC;MAED,MAAMC,kBAAkB,GAAGF,eAAe,CAACG,IAAI,CAAC,GAAG,CAAC;;MAEpD;MACA,IAAIF,YAAY,CAACC,kBAAkB,CAAC,EAAE;QACpC,OAAOD,YAAY,CAACC,kBAAkB,CAAC;MACzC;;MAEA;MACA,MAAME,aAAa,GAAGC,MAAM,CAACC,OAAO,CAACL,YAAY,CAAC,CAC/CM,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,KAAKN,kBAAkB,CAACO,UAAU,CAACD,GAAG,CAAC,CAAC,CACrDE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC,CAACrE,MAAM,GAAGoE,CAAC,CAAC,CAAC,CAAC,CAACpE,MAAM,CAAC,CAAC,CAAC;;MAE9C,IAAI6D,aAAa,CAAC7D,MAAM,GAAG,CAAC,EAAE;QAC5B;QACA,MAAM,CAACsE,YAAY,EAAEC,kBAAkB,CAAC,GAAGV,aAAa,CAAC,CAAC,CAAC;QAC3D;QACA,MAAMW,aAAa,GAAGb,kBAAkB,CAACc,KAAK,CAACH,YAAY,CAACtE,MAAM,CAAC;QACnE;QACA,OAAOwE,aAAa,GAClB,GAAGD,kBAAkB,GAAGC,aAAa,EAAE,GACvCD,kBAAkB;MACtB;;MAEA;MACA,OAAOZ,kBAAkB;IAC3B,CAAC;IAED,IAAI/D,IAAI,CAACK,IAAI,KAAK,QAAQ,EAAE;MAC1B,MAAMyE,WAAwB,GAAG;QAC/B,gBAAgB,EAAE;UAChBvH,WAAW,EAAE,4EAA4E;UACzFwH,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE;QACV,CAAC;QACD,yBAAyB,EAAE;UACzBzH,WAAW,EAAE,4DAA4D;UACzEwH,UAAU,EAAE,GAAG;UACfC,MAAM,EAAE;QACV,CAAC;QACD,qBAAqB,EAAE;UACrBzH,WAAW,EAAE,0DAA0D;UACvEwH,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE;QACV,CAAC;QACD,4BAA4B,EAAE;UAC5BzH,WAAW,EAAE,4DAA4D;UACzEwH,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE;QACV;MACF,CAAC;MAED,OAAO;QACL,GAAGzB,WAAW;QACd,IAAIuB,WAAW,CAAC9E,IAAI,CAAC1C,IAAI,CAAC,IAAI;UAC5BC,WAAW,EAAE,wDAAwD;UACrEwH,UAAU,EAAE7H,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG;UAClD4H,MAAM,EAAE9H,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,GAAG;QAC3C,CAAC;MACH,CAAC;IACH;;IAEA;IACA,OAAO;MACL,GAAGmG,WAAW;MACdhG,WAAW,EAAE0H,uBAAuB,CAACjF,IAAI,CAAC1C,IAAI,CAAC;MAC/C0H,MAAM,EAAE9H,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,GAAG,YAAY;MACrD8H,QAAQ,EAAE,OAAOlF,IAAI,CAACwD,KAAK;MAC3B2B,OAAO,EAAE,OAAOvB,eAAe,CAACzE,IAAI,CAAC;IACvC,CAAC;EACH,CAAC;EAED,MAAMiG,eAAe,GAAGA,CAACpF,IAAc,EAAEqF,WAAmB,KAAK;IAAA,IAAAC,cAAA;IAC/D,MAAM3F,UAAU,GAAGvB,OAAO,CAACyG,KAAK,CAAC,CAAC,EAAEQ,WAAW,GAAG,CAAC,CAAC;IACpD1F,UAAU,CAAC0F,WAAW,CAAC,GAAG;MAAE,GAAG1F,UAAU,CAAC0F,WAAW,CAAC;MAAE9G,YAAY,EAAEyB;IAAK,CAAC;IAE5E,IAAIA,IAAI,CAACK,IAAI,KAAK,QAAQ,KAAAiF,cAAA,GAAItF,IAAI,CAACC,QAAQ,cAAAqF,cAAA,eAAbA,cAAA,CAAelF,MAAM,EAAE;MACnDzB,mBAAmB,CAAC,CAAC,GAAGD,gBAAgB,EAAE2G,WAAW,GAAG,CAAC,CAAC,CAAC;MAC3DjE,UAAU,CAAC,MAAM;QACfzB,UAAU,CAAC9C,IAAI,CAAC;UAAEyB,KAAK,EAAE0B,IAAI,CAACC,QAAQ,IAAI,EAAE;UAAE1B,YAAY,EAAE;QAAK,CAAC,CAAC;QACnEF,UAAU,CAACsB,UAAU,CAAC;MACxB,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,MAAM;MACLtB,UAAU,CAACsB,UAAU,CAAC;IACxB;;IAEA;IACA,MAAMR,IAAI,GAAGQ,UAAU,CAAC4F,GAAG,CAAEC,GAAe;MAAA,IAAAC,iBAAA;MAAA,OAAK,EAAAA,iBAAA,GAAAD,GAAG,CAACjH,YAAY,cAAAkH,iBAAA,uBAAhBA,iBAAA,CAAkBnI,IAAI,KAAI,EAAE;IAAA,EAAC,CAAC8G,MAAM,CAACsB,OAAO,CAAC;IAE9FjH,kBAAkB,CAAC+B,cAAc,CAACR,IAAI,EAAEb,IAAI,CAAC,CAAC;IAC9CJ,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAM4G,eAAe,GAAGA,CAACC,SAAiB,EAAEC,kBAA2B,GAAG,KAAK,KAAK;IAClF,MAAMC,WAAW,GAAG1H,OAAO,CAACwH,SAAS,CAAC,CAACrH,YAAY;IACnD,IAAIuH,WAAW,EAAE;MACf,IAAID,kBAAkB,EAAE;QACtB9G,oBAAoB,CAAC6G,SAAS,CAAC;QAC/BnH,kBAAkB,CAAC+B,cAAc,CAACsF,WAAW,EAAE,CAAAtH,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEW,IAAI,KAAI,EAAE,CAAC,CAAC;MAC9E,CAAC,MAAM;QAAA,IAAA4G,qBAAA;QACLhH,oBAAoB,CAAC,IAAI,CAAC;QAC1B,MAAMY,UAAU,GAAGvB,OAAO,CAACyG,KAAK,CAAC,CAAC,EAAEe,SAAS,GAAG,CAAC,CAAC;QAElD,IAAIE,WAAW,CAACzF,IAAI,KAAK,QAAQ,KAAA0F,qBAAA,GAAID,WAAW,CAAC7F,QAAQ,cAAA8F,qBAAA,eAApBA,qBAAA,CAAsB3F,MAAM,EAAE;UACjET,UAAU,CAACiG,SAAS,CAAC,GAAG;YAAE,GAAGjG,UAAU,CAACiG,SAAS,CAAC;YAAErH,YAAY,EAAEuH;UAAY,CAAC;UAC/EnG,UAAU,CAAC9C,IAAI,CAAC;YAAEyB,KAAK,EAAEwH,WAAW,CAAC7F,QAAQ;YAAE1B,YAAY,EAAE;UAAK,CAAC,CAAC;QACtE,CAAC,MAAM;UACLoB,UAAU,CAACiG,SAAS,CAAC,GAAG;YAAE,GAAGjG,UAAU,CAACiG,SAAS,CAAC;YAAErH,YAAY,EAAEuH;UAAY,CAAC;QACjF;;QAEA;QACA,MAAM3G,IAAI,GAAGQ,UAAU,CAAC4F,GAAG,CAAEC,GAAe;UAAA,IAAAQ,kBAAA;UAAA,OAAK,EAAAA,kBAAA,GAAAR,GAAG,CAACjH,YAAY,cAAAyH,kBAAA,uBAAhBA,kBAAA,CAAkB1I,IAAI,KAAI,EAAE;QAAA,EAAC,CAAC8G,MAAM,CAACsB,OAAO,CAAC;QAE9FrH,UAAU,CAACsB,UAAU,CAAC;QACtBlB,kBAAkB,CAAC+B,cAAc,CAACsF,WAAW,EAAE3G,IAAI,CAAC,CAAC;MACvD;IACF;EACF,CAAC;EAED,MAAM8G,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIzH,eAAe,EAAE;MACnB,MAAMW,IAAI,GAAGX,eAAe,CAACW,IAAI,CAAC6E,IAAI,CAAC,GAAG,CAAC;MAC3ChF,QAAQ,CAAC,cAAcG,IAAI,EAAE,CAAC;IAChC;EACF,CAAC;EAED,MAAM+G,YAAY,GAAGA,CAACC,MAAkB,EAAEd,WAAmB,kBAC3DnJ,OAAA,CAAC7B,GAAG;IAEF4I,EAAE,EAAE;MACFmD,KAAK,EAAE,GAAG;MACVC,IAAI,EAAE,WAAW;MACjBC,WAAW,EAAEjB,WAAW,GAAGjH,OAAO,CAACgC,MAAM,GAAG,CAAC,GAAG,WAAW,GAAG,MAAM;MACpEmG,WAAW,EAAE1L,KAAK,CAACqE,KAAK,CAACsH,OAAO,CAACC,OAAO,EAAE,IAAI,CAAC;MAC/CC,eAAe,EAAE,OAAO;MACxBC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE,sBAAsB;MAClCC,SAAS,EAAErI,gBAAgB,CAACqD,QAAQ,CAACsD,WAAW,CAAC,GAAG,eAAe,GAAG,eAAe;MACrF2B,OAAO,EAAEtI,gBAAgB,CAACqD,QAAQ,CAACsD,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC;MACvD4B,SAAS,EAAEvI,gBAAgB,CAACqD,QAAQ,CAACsD,WAAW,CAAC,GAAG,0BAA0B,GAAG,MAAM;MACvF,oBAAoB,EAAE;QACpB,IAAI,EAAE;UACJ0B,SAAS,EAAE,kBAAkB;UAC7BC,OAAO,EAAE;QACX,CAAC;QACD,MAAM,EAAE;UACND,SAAS,EAAE,eAAe;UAC1BC,OAAO,EAAE;QACX;MACF;IACF,CAAE;IAAA/G,QAAA,eAEF/D,OAAA,CAACzB,IAAI;MAACwI,EAAE,EAAE;QACRoD,IAAI,EAAE,CAAC;QACPQ,QAAQ,EAAE,MAAM;QAChBK,SAAS,EAAE,QAAQ;QACnBC,EAAE,EAAE,CAAC;QACL,sBAAsB,EAAE;UAAEf,KAAK,EAAE;QAAE,CAAC;QACpC,4BAA4B,EAAE;UAAEM,eAAe,EAAE;QAAc,CAAC;QAChE,4BAA4B,EAAE;UAC5BA,eAAe,EAAE7L,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC;UACpCuM,YAAY,EAAE,CAAC;UACf,SAAS,EAAE;YAAEV,eAAe,EAAE7L,KAAK,CAAC,MAAM,EAAE,IAAI;UAAE;QACpD;MACF,CAAE;MAAAoF,QAAA,EACCkG,MAAM,CAAC7H,KAAK,CAACiH,GAAG,CAAEvF,IAAI;QAAA,IAAAqH,oBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA;QAAA,oBACrB1L,OAAA,CAACxB,QAAQ;UAEPmN,OAAO,EAAEA,CAAA,KAAMzC,eAAe,CAACpF,IAAI,EAAEqF,WAAW,CAAE;UAClDpC,EAAE,EAAE;YACF6E,MAAM,EAAE,SAAS;YACjBX,EAAE,EAAE,GAAG;YACPY,EAAE,EAAE,CAAC;YACLjB,UAAU,EAAE,sBAAsB;YAClCJ,eAAe,EAAE,EAAAW,oBAAA,GAAAlB,MAAM,CAAC5H,YAAY,cAAA8I,oBAAA,uBAAnBA,oBAAA,CAAqB/J,IAAI,MAAK0C,IAAI,CAAC1C,IAAI,GAAGzC,KAAK,CAACqE,KAAK,CAACsH,OAAO,CAACwB,OAAO,CAACC,IAAI,EAAE,IAAI,CAAC,GAAG,aAAa;YAClHC,UAAU,EAAE,EAAAZ,qBAAA,GAAAnB,MAAM,CAAC5H,YAAY,cAAA+I,qBAAA,uBAAnBA,qBAAA,CAAqBhK,IAAI,MAAK0C,IAAI,CAAC1C,IAAI,GAAG,aAAa4B,KAAK,CAACsH,OAAO,CAACwB,OAAO,CAACC,IAAI,EAAE,GAAG,uBAAuB;YACzHb,YAAY,EAAE,KAAK;YACnBe,EAAE,EAAE,CAAC;YACL,SAAS,EAAE;cACTzB,eAAe,EAAE,EAAAa,qBAAA,GAAApB,MAAM,CAAC5H,YAAY,cAAAgJ,qBAAA,uBAAnBA,qBAAA,CAAqBjK,IAAI,MAAK0C,IAAI,CAAC1C,IAAI,GAAGzC,KAAK,CAACqE,KAAK,CAACsH,OAAO,CAACwB,OAAO,CAACC,IAAI,EAAE,IAAI,CAAC,GAAGpN,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC;cAC1HkM,SAAS,EAAE;YACb;UACF,CAAE;UAAA9G,QAAA,gBAEF/D,OAAA,CAACvB,YAAY;YAACsI,EAAE,EAAE;cAChBmF,QAAQ,EAAE,EAAE;cACZC,KAAK,EAAE,EAAAb,qBAAA,GAAArB,MAAM,CAAC5H,YAAY,cAAAiJ,qBAAA,uBAAnBA,qBAAA,CAAqBlK,IAAI,MAAK0C,IAAI,CAAC1C,IAAI,GAAG4B,KAAK,CAACsH,OAAO,CAACwB,OAAO,CAACC,IAAI,GAAGpN,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC;cAChGiM,UAAU,EAAE;YACd,CAAE;YAAA7G,QAAA,EACCD,IAAI,CAACK,IAAI,KAAK,QAAQ,gBACrBnE,OAAA,CAAC7B,GAAG;cAAC4I,EAAE,EAAE;gBACP0D,OAAO,EAAE,MAAM;gBACf2B,UAAU,EAAE,QAAQ;gBACpBxB,UAAU,EAAE,4BAA4B;gBACxCC,SAAS,EAAE,EAAAU,qBAAA,GAAAtB,MAAM,CAAC5H,YAAY,cAAAkJ,qBAAA,uBAAnBA,qBAAA,CAAqBnK,IAAI,MAAK0C,IAAI,CAAC1C,IAAI,GAAG,YAAY,GAAG;cACtE,CAAE;cAAA2C,QAAA,GACC,EAAAyH,qBAAA,GAAAvB,MAAM,CAAC5H,YAAY,cAAAmJ,qBAAA,uBAAnBA,qBAAA,CAAqBpK,IAAI,MAAK0C,IAAI,CAAC1C,IAAI,gBAAGpB,OAAA,CAACb,cAAc;gBAAC4H,EAAE,EAAE;kBAAEC,QAAQ,EAAE;gBAAG;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gBAAGpH,OAAA,CAACd,UAAU;gBAAC6H,EAAE,EAAE;kBAAEC,QAAQ,EAAE;gBAAG;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC1HpH,OAAA,CAACT,gBAAgB;gBAACwH,EAAE,EAAE;kBACpBsF,EAAE,EAAE,GAAG;kBACPrF,QAAQ,EAAE,EAAE;kBACZ8D,OAAO,EAAE,GAAG;kBACZF,UAAU,EAAE,4BAA4B;kBACxCC,SAAS,EAAE,EAAAY,qBAAA,GAAAxB,MAAM,CAAC5H,YAAY,cAAAoJ,qBAAA,uBAAnBA,qBAAA,CAAqBrK,IAAI,MAAK0C,IAAI,CAAC1C,IAAI,GAAG,eAAe,GAAG;gBACzE;cAAE;gBAAA6F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,gBAENpH,OAAA,CAACZ,mBAAmB;cAAC2H,EAAE,EAAE;gBAAEC,QAAQ,EAAE;cAAG;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAC7C;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACW,CAAC,eACfpH,OAAA,CAACtB,YAAY;YACXoN,OAAO,EAAEhI,IAAI,CAAC1C,IAAK;YACnB2F,EAAE,EAAE;cACF,uBAAuB,EAAE;gBACvBoF,KAAK,EAAE,EAAAT,qBAAA,GAAAzB,MAAM,CAAC5H,YAAY,cAAAqJ,qBAAA,uBAAnBA,qBAAA,CAAqBtK,IAAI,MAAK0C,IAAI,CAAC1C,IAAI,GAAG4B,KAAK,CAACsH,OAAO,CAACwB,OAAO,CAACC,IAAI,GAAGpN,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC;gBAChGiM,UAAU,EAAE,sBAAsB;gBAClC5D,QAAQ,EAAE,UAAU;gBACpBsF,UAAU,EAAExI,IAAI,CAACK,IAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG;gBAC9CoI,UAAU,EAAE,GAAG;gBACf5B,QAAQ,EAAE,QAAQ;gBAClB6B,YAAY,EAAE,UAAU;gBACxBC,UAAU,EAAE;cACd;YACF;UAAE;YAAAxF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,GAxDGtD,IAAI,CAAC1C,IAAI;UAAA6F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAyDN,CAAC;MAAA,CACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,GApGF+B,WAAW;IAAAlC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAqGb,CACN;EAED,MAAMsF,UAAU,GAAGA,CAACC,GAA2C,EAAEC,WAAoB,GAAG,IAAI,EAAEjD,kBAA2B,GAAG,KAAK;IAAA,IAAAkD,qBAAA;IAAA,oBAC/H7M,OAAA,CAAC7B,GAAG;MACFwO,GAAG,EAAEA,GAAI;MACT5F,EAAE,EAAE;QACF0D,OAAO,EAAE,MAAM;QACfO,SAAS,EAAE,MAAM;QACjBC,EAAE,EAAEtB,kBAAkB,GAAG,GAAG,GAAG,GAAG;QAClCkC,EAAE,EAAElC,kBAAkB,GAAG,CAAC,GAAG,CAAC;QAC9BmD,EAAE,EAAEnD,kBAAkB,GAAG,CAAC,GAAG,GAAG;QAChCoD,OAAO,EAAEpD,kBAAkB,GAAGhL,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,GAAG,OAAO;QAC7DqO,YAAY,EAAErD,kBAAkB,GAAG,WAAW,GAAG,MAAM;QACvDU,WAAW,EAAE,SAAS;QACtB4C,QAAQ,EAAE,UAAU;QACpB,sBAAsB,EAAE;UAAExC,OAAO,EAAE;QAAO,CAAC;QAC3CyC,cAAc,EAAE,MAAM;QAAG;QACzBC,eAAe,EAAE,MAAM;QAAG;QAC1B,IAAIxD,kBAAkB,IAAI;UACxB,UAAU,EAAE;YACVyD,OAAO,EAAE,IAAI;YACbH,QAAQ,EAAE,UAAU;YACpBI,MAAM,EAAE,CAAC,CAAC;YACV1I,IAAI,EAAE,CAAC;YACP2I,KAAK,EAAE,CAAC;YACRC,MAAM,EAAE,CAAC;YACTC,UAAU,EAAE;UACd;QACF,CAAC;MACH,CAAE;MAAAzJ,QAAA,eAEF/D,OAAA,CAAC7B,GAAG;QAAC4I,EAAE,EAAE;UACP0D,OAAO,EAAE,MAAM;UACf2B,UAAU,EAAE,QAAQ;UACpB,IAAIzC,kBAAkB,IAAI;YACxB,WAAW,EAAE;cACXyD,OAAO,EAAE,SAAS;cAClBjB,KAAK,EAAE,SAAS;cAChBnF,QAAQ,EAAE,SAAS;cACnBsF,UAAU,EAAE,GAAG;cACfmB,WAAW,EAAE,GAAG;cAChBC,aAAa,EAAE,WAAW;cAC1BC,aAAa,EAAE;YACjB;UACF,CAAC;QACH,CAAE;QAAA5J,QAAA,EACCzB,eAAe,aAAfA,eAAe,wBAAAuK,qBAAA,GAAfvK,eAAe,CAAEW,IAAI,cAAA4J,qBAAA,uBAArBA,qBAAA,CAAuBxD,GAAG,CAAC,CAACvF,IAAY,EAAE8J,KAAa;UAAA,IAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;UAAA,oBACtDlO,OAAA,CAACjC,KAAK,CAACkC,QAAQ;YAAA8D,QAAA,GACZ6J,KAAK,GAAG,CAAC,iBACR5N,OAAA,CAACT,gBAAgB;cACfwH,EAAE,EAAE;gBACFkF,EAAE,EAAE,IAAI;gBACRjF,QAAQ,EAAE2C,kBAAkB,GAAG,EAAE,GAAG,EAAE;gBACtCwC,KAAK,EAAExC,kBAAkB,GAAGhL,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,GAAG,SAAS;gBAC7DwP,aAAa,EAAE;cACjB;YAAE;cAAAlH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CACF,eACDpH,OAAA,CAAC7B,GAAG;cACFwN,OAAO,EAAEA,CAAA,KAAMiB,WAAW,IAAInD,eAAe,CAACmE,KAAK,EAAEjE,kBAAkB,CAAE;cACzE5C,EAAE,EAAE;gBACFkE,EAAE,EAAE,GAAG;gBACPY,EAAE,EAAE,CAAC;gBACLpB,OAAO,EAAE,MAAM;gBACf2B,UAAU,EAAE,QAAQ;gBACpBK,UAAU,EAAE,QAAQ;gBACpBN,KAAK,EAAEyB,KAAK,KAAK,EAAAC,sBAAA,GAACvL,eAAe,aAAfA,eAAe,wBAAAwL,sBAAA,GAAfxL,eAAe,CAAEW,IAAI,cAAA6K,sBAAA,uBAArBA,sBAAA,CAAuB5J,MAAM,cAAA2J,sBAAA,cAAAA,sBAAA,GAAI,CAAC,IAAI,CAAC,GACrD,SAAS,GACTlE,kBAAkB,GAChB,SAAS,GACT,SAAS;gBACf2C,UAAU,EAAEsB,KAAK,KAAK,EAAAG,sBAAA,GAACzL,eAAe,aAAfA,eAAe,wBAAA0L,sBAAA,GAAf1L,eAAe,CAAEW,IAAI,cAAA+K,sBAAA,uBAArBA,sBAAA,CAAuB9J,MAAM,cAAA6J,sBAAA,cAAAA,sBAAA,GAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG;gBAC1E/G,QAAQ,EAAE2C,kBAAkB,GAAG,UAAU,GAAG,WAAW;gBACvDiC,MAAM,EAAEgB,WAAW,GAAG,SAAS,GAAG,SAAS;gBAC3CpC,eAAe,EAAEb,kBAAkB,IAAI/G,iBAAiB,KAAKgL,KAAK,GAAGjP,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,aAAa;gBAC3GyP,MAAM,EAAEzE,kBAAkB,IAAI/G,iBAAiB,KAAKgL,KAAK,GAAG,WAAW,GAAG,uBAAuB;gBACjGvD,WAAW,EAAEV,kBAAkB,IAAI/G,iBAAiB,KAAKgL,KAAK,GAAGjP,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,GAAG,aAAa;gBACtGuM,YAAY,EAAE,KAAK;gBACnBN,UAAU,EAAE,sBAAsB;gBAClC,SAAS,EAAEgC,WAAW,GAAG;kBACvBT,KAAK,EAAE,SAAS;kBAChB3B,eAAe,EAAE7L,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC;kBACvC,IAAIgL,kBAAkB,IAAI;oBACxBkB,SAAS,EAAE,kBAAkB;oBAC7BwD,SAAS,EAAE,aAAa1P,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC;kBAC7C,CAAC;gBACH,CAAC,GAAG,CAAC,CAAC;gBACN,IAAIgL,kBAAkB,IAAI;kBACxBc,OAAO,EAAE,aAAa;kBACtB2B,UAAU,EAAE,QAAQ;kBACpBkC,GAAG,EAAE,GAAG;kBACR,WAAW,EAAE;oBACXlB,OAAO,EAAEQ,KAAK,KAAK,CAAC,GAAG,MAAM,GACpBA,KAAK,KAAK,EAAAK,sBAAA,GAAC3L,eAAe,aAAfA,eAAe,wBAAA4L,sBAAA,GAAf5L,eAAe,CAAEW,IAAI,cAAAiL,sBAAA,uBAArBA,sBAAA,CAAuBhK,MAAM,cAAA+J,sBAAA,cAAAA,sBAAA,GAAI,CAAC,IAAI,CAAC,GAAG,MAAM,GAAG,MAAM;oBAC7EjH,QAAQ,EAAE,MAAM;oBAChB8D,OAAO,EAAE;kBACX;gBACF,CAAC;cACH,CAAE;cAAA/G,QAAA,EAEDD;YAAI;cAAAmD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UAAA,GAtDawG,KAAK;YAAA3G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAuDV,CAAC;QAAA,CAClB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,CACP;EAED,MAAMmH,kBAAkB,GAAGA,CAAA,KAAM;IAAA,IAAAC,sBAAA,EAAAC,qBAAA;IAC/B,IAAI,CAACnM,eAAe,EAAE;MACpB,OAAO,IAAI;IACb;IAEA,oBACEtC,OAAA,CAAC1B,KAAK;MAACyI,EAAE,EAAE;QACTmD,KAAK,EAAE,GAAG;QACVO,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBC,QAAQ,EAAE,QAAQ;QAClBO,YAAY,EAAE,MAAM;QACpBmD,SAAS,EAAE,cAAc1P,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC;MAC9C,CAAE;MAAAoF,QAAA,GAEC,CAAAzB,eAAe,aAAfA,eAAe,wBAAAkM,sBAAA,GAAflM,eAAe,CAAEW,IAAI,cAAAuL,sBAAA,uBAArBA,sBAAA,CAAuBtK,MAAM,IAAG,CAAC,IAAIwI,UAAU,CAAC/J,oBAAoB,EAAE,IAAI,EAAE,IAAI,CAAC,eAGlF3C,OAAA,CAAC7B,GAAG;QAAC4I,EAAE,EAAE;UACPoD,IAAI,EAAE,CAAC;UACPQ,QAAQ,EAAE,MAAM;UAChB+D,CAAC,EAAE;QACL,CAAE;QAAA3K,QAAA,gBACA/D,OAAA,CAAC7B,GAAG;UAAC4I,EAAE,EAAE;YAAE4H,EAAE,EAAE;UAAE,CAAE;UAAA5K,QAAA,gBACjB/D,OAAA,CAAC5B,UAAU;YAACwQ,OAAO,EAAC,WAAW;YAACzC,KAAK,EAAC,gBAAgB;YAAC0C,YAAY;YAAC9H,EAAE,EAAE;cACtEC,QAAQ,EAAE,SAAS;cACnBsF,UAAU,EAAE,GAAG;cACfoB,aAAa,EAAE,WAAW;cAC1BC,aAAa,EAAE,OAAO;cACtBxB,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG;YAC1B,CAAE;YAAAoF,QAAA,EAAC;UAEH;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbpH,OAAA,CAAC5B,UAAU;YAACwQ,OAAO,EAAC,OAAO;YAAC7H,EAAE,EAAE;cAC9BoF,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC;cACzBqI,QAAQ,EAAE,UAAU;cACpBuF,UAAU,EAAE;YACd,CAAE;YAAAxI,QAAA,EACCzB,eAAe,CAACjB;UAAW;YAAA4F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,EAGL9E,eAAe,CAAC6B,IAAI,KAAK,MAAM,IAAI7B,eAAe,CAAC2G,OAAO,iBACzDjJ,OAAA,CAAC7B,GAAG;UAAC4I,EAAE,EAAE;YAAE4H,EAAE,EAAE;UAAE,CAAE;UAAA5K,QAAA,gBACjB/D,OAAA,CAAC5B,UAAU;YAACwQ,OAAO,EAAC,WAAW;YAACzC,KAAK,EAAC,gBAAgB;YAAC0C,YAAY;YAAC9H,EAAE,EAAE;cACtEC,QAAQ,EAAE,SAAS;cACnBsF,UAAU,EAAE,GAAG;cACfoB,aAAa,EAAE,WAAW;cAC1BC,aAAa,EAAE,OAAO;cACtBxB,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG;YAC1B,CAAE;YAAAoF,QAAA,EAAC;UAEH;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbpH,OAAA,CAAC5B,UAAU;YAACwQ,OAAO,EAAC,OAAO;YAAC7H,EAAE,EAAE;cAC9B+H,SAAS,EAAE,WAAW;cACtBtE,eAAe,EAAE7L,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC;cACtC+P,CAAC,EAAE,GAAG;cACNxD,YAAY,EAAE,KAAK;cACnBlE,QAAQ,EAAE,SAAS;cACnB+H,UAAU,EAAE,WAAW;cACvB5C,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC;cACzB4N,UAAU,EAAE;YACd,CAAE;YAAAxI,QAAA,EACCzB,eAAe,CAAC2G;UAAO;YAAAhC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CACN,eAEDpH,OAAA,CAAC7B,GAAG;UAAC4I,EAAE,EAAE;YAAE4H,EAAE,EAAE;UAAE,CAAE;UAAA5K,QAAA,gBACjB/D,OAAA,CAAC5B,UAAU;YAACwQ,OAAO,EAAC,WAAW;YAACzC,KAAK,EAAC,gBAAgB;YAAC0C,YAAY;YAAC9H,EAAE,EAAE;cACtEC,QAAQ,EAAE,SAAS;cACnBsF,UAAU,EAAE,GAAG;cACfoB,aAAa,EAAE,WAAW;cAC1BC,aAAa,EAAE,OAAO;cACtBxB,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG;YAC1B,CAAE;YAAAoF,QAAA,EAAC;UAEH;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbpH,OAAA,CAACjB,IAAI;YACH8H,KAAK,EAAEvE,eAAe,CAACwG,MAAO;YAC9BkG,IAAI,EAAC,OAAO;YACZjI,EAAE,EAAE;cACFyD,eAAe,EAAElI,eAAe,CAACwG,MAAM,KAAK,QAAQ,GAChDnK,KAAK,CAACqE,KAAK,CAACsH,OAAO,CAAC2E,OAAO,CAAClD,IAAI,EAAE,GAAG,CAAC,GACtCpN,KAAK,CAACqE,KAAK,CAACsH,OAAO,CAAC4E,OAAO,CAACnD,IAAI,EAAE,GAAG,CAAC;cAC1CI,KAAK,EAAE7J,eAAe,CAACwG,MAAM,KAAK,QAAQ,GACtC9F,KAAK,CAACsH,OAAO,CAAC2E,OAAO,CAAClD,IAAI,GAC1B/I,KAAK,CAACsH,OAAO,CAAC4E,OAAO,CAACnD,IAAI;cAC9BO,UAAU,EAAE,GAAG;cACf,kBAAkB,EAAE;gBAClBT,EAAE,EAAE,GAAG;gBACP7E,QAAQ,EAAE;cACZ;YACF;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EAEL9E,eAAe,CAAC6B,IAAI,KAAK,QAAQ,gBAChCnE,OAAA,CAAAE,SAAA;UAAA6D,QAAA,eACE/D,OAAA,CAAC7B,GAAG;YAAC4I,EAAE,EAAE;cAAE4H,EAAE,EAAE;YAAE,CAAE;YAAA5K,QAAA,gBACjB/D,OAAA,CAAC5B,UAAU;cAACwQ,OAAO,EAAC,WAAW;cAACzC,KAAK,EAAC,gBAAgB;cAAC0C,YAAY;cAAC9H,EAAE,EAAE;gBACtEC,QAAQ,EAAE,SAAS;gBACnBsF,UAAU,EAAE,GAAG;gBACfoB,aAAa,EAAE,WAAW;gBAC1BC,aAAa,EAAE,OAAO;gBACtBxB,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG;cAC1B,CAAE;cAAAoF,QAAA,EAAC;YAEH;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbpH,OAAA,CAAC5B,UAAU;cAACwQ,OAAO,EAAC,OAAO;cAAC7H,EAAE,EAAE;gBAC9BoF,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC;gBACzBqI,QAAQ,EAAE,UAAU;gBACpByD,OAAO,EAAE,MAAM;gBACf2B,UAAU,EAAE,QAAQ;gBACpBkC,GAAG,EAAE;cACP,CAAE;cAAAvK,QAAA,gBACA/D,OAAA,CAACV,YAAY;gBAACyH,EAAE,EAAE;kBAAEC,QAAQ,EAAE,EAAE;kBAAEmF,KAAK,EAAEnJ,KAAK,CAACsH,OAAO,CAACwB,OAAO,CAACC;gBAAK;cAAE;gBAAA9E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,GAAAqH,qBAAA,GACxEnM,eAAe,CAACuG,UAAU,cAAA4F,qBAAA,uBAA1BA,qBAAA,CAA4BU,cAAc,CAAC,CAAC,EAAC,aAChD;YAAA;cAAAlI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC,gBACN,CAAC,gBAEHpH,OAAA,CAAAE,SAAA;UAAA6D,QAAA,gBACE/D,OAAA,CAAC7B,GAAG;YAAC4I,EAAE,EAAE;cAAE4H,EAAE,EAAE;YAAE,CAAE;YAAA5K,QAAA,gBACjB/D,OAAA,CAAC5B,UAAU;cAACwQ,OAAO,EAAC,WAAW;cAACzC,KAAK,EAAC,gBAAgB;cAAC0C,YAAY;cAAC9H,EAAE,EAAE;gBACtEC,QAAQ,EAAE,SAAS;gBACnBsF,UAAU,EAAE,GAAG;gBACfoB,aAAa,EAAE,WAAW;gBAC1BC,aAAa,EAAE,OAAO;gBACtBxB,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG;cAC1B,CAAE;cAAAoF,QAAA,EAAC;YAEH;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbpH,OAAA,CAACjB,IAAI;cACH8H,KAAK,EAAEvE,eAAe,CAAC0G,QAAS;cAChCgG,IAAI,EAAC,OAAO;cACZjI,EAAE,EAAE;gBACFyD,eAAe,EAAE7L,KAAK,CAACqE,KAAK,CAACsH,OAAO,CAACwB,OAAO,CAACC,IAAI,EAAE,GAAG,CAAC;gBACvDI,KAAK,EAAEnJ,KAAK,CAACsH,OAAO,CAACwB,OAAO,CAACC,IAAI;gBACjCO,UAAU,EAAE,GAAG;gBACf,kBAAkB,EAAE;kBAClBT,EAAE,EAAE,GAAG;kBACP7E,QAAQ,EAAE;gBACZ;cACF;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENpH,OAAA,CAAC7B,GAAG;YAAC4I,EAAE,EAAE;cAAE4H,EAAE,EAAE;YAAE,CAAE;YAAA5K,QAAA,gBACjB/D,OAAA,CAAC5B,UAAU;cAACwQ,OAAO,EAAC,WAAW;cAACzC,KAAK,EAAC,gBAAgB;cAAC0C,YAAY;cAAC9H,EAAE,EAAE;gBACtEC,QAAQ,EAAE,SAAS;gBACnBsF,UAAU,EAAE,GAAG;gBACfoB,aAAa,EAAE,WAAW;gBAC1BC,aAAa,EAAE,OAAO;gBACtBxB,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG;cAC1B,CAAE;cAAAoF,QAAA,EAAC;YAEH;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbpH,OAAA,CAAC5B,UAAU;cAACwQ,OAAO,EAAC,OAAO;cAAC7H,EAAE,EAAE;gBAC9B+H,SAAS,EAAE,WAAW;gBACtBtE,eAAe,EAAE7L,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC;gBACtC+P,CAAC,EAAE,GAAG;gBACNxD,YAAY,EAAE,KAAK;gBACnBlE,QAAQ,EAAE,SAAS;gBACnB+H,UAAU,EAAE,WAAW;gBACvB5C,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC;gBACzB4N,UAAU,EAAE;cACd,CAAE;cAAAxI,QAAA,EACCqL,IAAI,CAACC,SAAS,CAAC/M,eAAe,CAACgF,KAAK,EAAE,IAAI,EAAE,CAAC;YAAC;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA,eACN,CACH,eAEDpH,OAAA,CAAChB,OAAO;UAAC+H,EAAE,EAAE;YAAEuI,EAAE,EAAE,CAAC;YAAExE,OAAO,EAAE;UAAK;QAAE;UAAA7D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEzCpH,OAAA,CAAC7B,GAAG;UAAC4I,EAAE,EAAE;YAAE4H,EAAE,EAAE;UAAE,CAAE;UAAA5K,QAAA,gBACjB/D,OAAA,CAAC5B,UAAU;YAACwQ,OAAO,EAAC,WAAW;YAACzC,KAAK,EAAC,gBAAgB;YAAC0C,YAAY;YAAC9H,EAAE,EAAE;cACtEC,QAAQ,EAAE,SAAS;cACnBsF,UAAU,EAAE,GAAG;cACfoB,aAAa,EAAE,WAAW;cAC1BC,aAAa,EAAE,OAAO;cACtBxB,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG;YAC1B,CAAE;YAAAoF,QAAA,EAAC;UAEH;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbpH,OAAA,CAAC5B,UAAU;YAACwQ,OAAO,EAAC,OAAO;YAAC7H,EAAE,EAAE;cAC9BoF,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC;cACzBqI,QAAQ,EAAE,UAAU;cACpByD,OAAO,EAAE,MAAM;cACf2B,UAAU,EAAE,QAAQ;cACpBkC,GAAG,EAAE;YACP,CAAE;YAAAvK,QAAA,gBACA/D,OAAA,CAACR,UAAU;cAACuH,EAAE,EAAE;gBAAEC,QAAQ,EAAE,EAAE;gBAAEmF,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG;cAAE;YAAE;cAAAsI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAC9D9E,eAAe,CAACmF,KAAK;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eAENpH,OAAA,CAAC7B,GAAG;UAAC4I,EAAE,EAAE;YAAE4H,EAAE,EAAErM,eAAe,CAAC6B,IAAI,KAAK,MAAM,GAAG,CAAC,GAAG;UAAE,CAAE;UAAAJ,QAAA,gBACvD/D,OAAA,CAAC5B,UAAU;YAACwQ,OAAO,EAAC,WAAW;YAACzC,KAAK,EAAC,gBAAgB;YAAC0C,YAAY;YAAC9H,EAAE,EAAE;cACtEC,QAAQ,EAAE,SAAS;cACnBsF,UAAU,EAAE,GAAG;cACfoB,aAAa,EAAE,WAAW;cAC1BC,aAAa,EAAE,OAAO;cACtBxB,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG;YAC1B,CAAE;YAAAoF,QAAA,EAAC;UAEH;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbpH,OAAA,CAAC5B,UAAU;YAACwQ,OAAO,EAAC,OAAO;YAAC7H,EAAE,EAAE;cAC9BoF,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC;cACzBqI,QAAQ,EAAE;YACZ,CAAE;YAAAjD,QAAA,EACCzB,eAAe,CAACiF;UAAY;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,EAGL9E,eAAe,CAAC6B,IAAI,KAAK,MAAM,iBAC9BnE,OAAA,CAACpB,MAAM;UACLgQ,OAAO,EAAC,WAAW;UACnBI,IAAI,EAAC,OAAO;UACZrD,OAAO,EAAE5B,cAAe;UACxBhD,EAAE,EAAE;YACF2G,aAAa,EAAE,MAAM;YACrBxC,YAAY,EAAE,KAAK;YACnBmD,SAAS,EAAE,MAAM;YACjBkB,EAAE,EAAE,CAAC;YACLvI,QAAQ,EAAE,UAAU;YACpBiE,EAAE,EAAE,CAAC;YACLY,EAAE,EAAE,CAAC;YACL,SAAS,EAAE;cACTwC,SAAS,EAAE;YACb;UACF,CAAE;UAAAtK,QAAA,EACH;QAED;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEZ,CAAC;;EAED;EACA,MAAM2B,uBAAuB,GAAIyG,aAAqB,IAAa;IACjE,MAAMC,YAAoC,GAAG;MAC3C;MACA,WAAW,EAAE,4CAA4C;MACzD,UAAU,EAAE,2CAA2C;MACvD,aAAa,EAAE,uDAAuD;MACtE,yBAAyB,EAAE,gDAAgD;MAC3E,iBAAiB,EAAE,kDAAkD;MAErE;MACA,SAAS,EAAE,4BAA4B;MACvC,aAAa,EAAE,kDAAkD;MACjE,aAAa,EAAE,mDAAmD;MAClE,gBAAgB,EAAE,4CAA4C;MAE9D;MACA,0BAA0B,EAAE,6CAA6C;MACzE,KAAK,EAAE,kDAAkD;MACzD,MAAM,EAAE,oDAAoD;MAE5D;MACA,0BAA0B,EAAE,mDAAmD;MAC/E,aAAa,EAAE,+CAA+C;MAC9D,aAAa,EAAE,sCAAsC;MACrD,aAAa,EAAE,+BAA+B;MAC9C,WAAW,EAAE,oCAAoC;MACjD,QAAQ,EAAE,0BAA0B;MACpC,UAAU,EAAE,oCAAoC;MAEhD;MACA,cAAc,EAAE,yCAAyC;MACzD,eAAe,EAAE,uDAAuD;MACxE,kBAAkB,EAAE,sBAAsB;MAC1C,gBAAgB,EAAE,oBAAoB;MACtC,gBAAgB,EAAE,iCAAiC;MACnD,cAAc,EAAE,mBAAmB;MACnC,YAAY,EAAE,gDAAgD;MAE9D;MACA,cAAc,EAAE,wDAAwD;MACxE,YAAY,EAAE,sCAAsC;MACpD,sBAAsB,EAAE,qCAAqC;MAC7D,gBAAgB,EAAE,0CAA0C;MAC5D,kBAAkB,EAAE,wCAAwC;MAE5D;MACA,UAAU,EAAE,8BAA8B;MAC1C,UAAU,EAAE,wBAAwB;MACpC,SAAS,EAAE,gCAAgC;MAC3C,QAAQ,EAAE,+BAA+B;MACzC,KAAK,EAAE;IACT,CAAC;;IAED;IACA,MAAMC,cAAc,GAAGF,aAAa,CAACvK,WAAW,CAAC,CAAC,CAAC0K,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;;IAEtE;IACA,IAAIF,YAAY,CAACD,aAAa,CAAC,EAAE;MAC/B,OAAOC,YAAY,CAACD,aAAa,CAAC;IACpC;;IAEA;IACA,MAAMI,WAAW,GAAG5H,MAAM,CAAC6H,IAAI,CAACJ,YAAY,CAAC,CAAC5L,IAAI,CAACsE,GAAG,IACpDA,GAAG,CAAClD,WAAW,CAAC,CAAC,CAAC0K,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,KAAKD,cAC5C,CAAC;IAED,IAAIE,WAAW,EAAE;MACf,OAAOH,YAAY,CAACG,WAAW,CAAC;IAClC;;IAEA;IACA,OAAO,mEAAmE;EAC5E,CAAC;EAED,oBACE5P,OAAA,CAAC7B,GAAG;IAAC4I,EAAE,EAAE;MACP0D,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvB6C,MAAM,EAAE,MAAM;MACdN,QAAQ,EAAE;IACZ,CAAE;IAAAlJ,QAAA,gBAEA/D,OAAA,CAAC7B,GAAG;MACF4I,EAAE,EAAE;QACFkG,QAAQ,EAAE,OAAO;QACjB6C,GAAG,EAAE,CAAC;QACNnL,IAAI,EAAE,CAAC;QACP2I,KAAK,EAAE,CAAC;QACRD,MAAM,EAAE,CAAC;QACT7C,eAAe,EAAE,0BAA0B;QAC3CuF,cAAc,EAAE,WAAW;QAC3BC,MAAM,EAAE,IAAI;QACZvF,OAAO,EAAE5I,gBAAgB,GAAG,MAAM,GAAG,MAAM;QAC3CuK,UAAU,EAAE,YAAY;QACxB6D,cAAc,EAAE,QAAQ;QACxBC,EAAE,EAAE,MAAM;QACVpF,OAAO,EAAEjJ,gBAAgB,GAAG,CAAC,GAAG,CAAC;QACjC+I,UAAU,EAAE,4CAA4C;QACxDG,SAAS,EAAElJ,gBAAgB,GAAG,2CAA2C,GAAG,MAAM;QAClF,mBAAmB,EAAE;UACnB,IAAI,EAAE;YACJiJ,OAAO,EAAE;UACX,CAAC;UACD,MAAM,EAAE;YACNA,OAAO,EAAE;UACX;QACF;MACF,CAAE;MACFa,OAAO,EAAEA,CAAA,KAAM7J,mBAAmB,CAAC,KAAK,CAAE;MAAAiC,QAAA,eAE1C/D,OAAA,CAAC7B,GAAG;QACF4I,EAAE,EAAE;UACFmD,KAAK,EAAE,KAAK;UACZiG,QAAQ,EAAE,QAAQ;UAClB3F,eAAe,EAAE,OAAO;UACxBU,YAAY,EAAE,MAAM;UACpBmD,SAAS,EAAE,+BAA+B;UAC1CK,CAAC,EAAE,CAAC;UACJ7D,SAAS,EAAEhJ,gBAAgB,GAAG,eAAe,GAAG,mBAAmB;UACnEiJ,OAAO,EAAEjJ,gBAAgB,GAAG,CAAC,GAAG,CAAC;UACjC+I,UAAU,EAAE,wCAAwC;UACpDwF,SAAS,EAAE,MAAM;UACjB3F,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE,QAAQ;UACvBK,SAAS,EAAElJ,gBAAgB,GAAG,4CAA4C,GAAG,MAAM;UACnF,oBAAoB,EAAE;YACpB,IAAI,EAAE;cACJgJ,SAAS,EAAE,mBAAmB;cAC9BC,OAAO,EAAE;YACX,CAAC;YACD,MAAM,EAAE;cACND,SAAS,EAAE,eAAe;cAC1BC,OAAO,EAAE;YACX;UACF;QACF,CAAE;QACFa,OAAO,EAAG0E,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;QAAAvM,QAAA,gBAEpC/D,OAAA,CAAC3B,SAAS;UACRkS,SAAS;UACTC,QAAQ,EAAEvO,cAAe;UACzBwO,SAAS;UACTC,WAAW,EAAC,yCAAyC;UACrDpJ,KAAK,EAAE3F,WAAY;UACnBgP,QAAQ,EAAGN,CAAsC,IAAKzO,cAAc,CAACyO,CAAC,CAACO,MAAM,CAACtJ,KAAK,CAAE;UACrF0H,IAAI,EAAC,QAAQ;UACbjI,EAAE,EAAE;YACF,0BAA0B,EAAE;cAC1BmE,YAAY,EAAE,MAAM;cACpBV,eAAe,EAAE7L,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC;cACnC,YAAY,EAAE;gBACZ0L,WAAW,EAAE1L,KAAK,CAACqE,KAAK,CAACsH,OAAO,CAACC,OAAO,EAAE,GAAG;cAC/C,CAAC;cACD,kBAAkB,EAAE;gBAClBF,WAAW,EAAE1L,KAAK,CAACqE,KAAK,CAACsH,OAAO,CAACwB,OAAO,CAACC,IAAI,EAAE,GAAG;cACpD,CAAC;cACD,wBAAwB,EAAE;gBACxB1B,WAAW,EAAE1L,KAAK,CAACqE,KAAK,CAACsH,OAAO,CAACwB,OAAO,CAACC,IAAI,EAAE,GAAG;cACpD;YACF,CAAC;YACDhB,SAAS,EAAElJ,gBAAgB,GAAG,2CAA2C,GAAG,MAAM;YAClF,mBAAmB,EAAE;cACnB,IAAI,EAAE;gBACJiJ,OAAO,EAAE;cACX,CAAC;cACD,MAAM,EAAE;gBACNA,OAAO,EAAE;cACX;YACF;UACF,CAAE;UACF+F,UAAU,EAAE;YACVC,cAAc,eACZ9Q,OAAA,CAACf,cAAc;cAACgO,QAAQ,EAAC,OAAO;cAAAlJ,QAAA,eAC9B/D,OAAA,CAACX,UAAU;gBAAC0H,EAAE,EAAE;kBACdC,QAAQ,EAAE,EAAE;kBACZmF,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC;kBACzBoM,SAAS,EAAElJ,gBAAgB,GAAG,wCAAwC,GAAG,MAAM;kBAC/E,kBAAkB,EAAE;oBAClB,IAAI,EAAE;sBACJgJ,SAAS,EAAE,YAAY;sBACvBC,OAAO,EAAE;oBACX,CAAC;oBACD,KAAK,EAAE;sBACLD,SAAS,EAAE;oBACb,CAAC;oBACD,MAAM,EAAE;sBACNA,SAAS,EAAE,UAAU;sBACrBC,OAAO,EAAE;oBACX;kBACF;gBACF;cAAE;gBAAA7D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACS;UAEpB;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGFpH,OAAA,CAAC7B,GAAG;UAAC4I,EAAE,EAAE;YACPwI,EAAE,EAAE,CAAC;YACL5E,QAAQ,EAAE,MAAM;YAChByF,SAAS,EAAE,MAAM;YACjB,sBAAsB,EAAE;cAAElG,KAAK,EAAE;YAAE,CAAC;YACpC,4BAA4B,EAAE;cAAEM,eAAe,EAAE;YAAc,CAAC;YAChE,4BAA4B,EAAE;cAC5BA,eAAe,EAAE7L,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC;cACpCuM,YAAY,EAAE,CAAC;cACf,SAAS,EAAE;gBAAEV,eAAe,EAAE7L,KAAK,CAAC,MAAM,EAAE,IAAI;cAAE;YACpD,CAAC;YACDoM,SAAS,EAAElJ,gBAAgB,GAAG,2CAA2C,GAAG,MAAM;YAClF,mBAAmB,EAAE;cACnB,IAAI,EAAE;gBACJiJ,OAAO,EAAE;cACX,CAAC;cACD,MAAM,EAAE;gBACNA,OAAO,EAAE;cACX;YACF;UACF,CAAE;UAAA/G,QAAA,EACCpC,WAAW,CAACmD,IAAI,CAAC,CAAC,GACjB/C,aAAa,CAACmC,MAAM,GAAG,CAAC,gBACtBlE,OAAA,CAACzB,IAAI;YAAAwF,QAAA,EACFhC,aAAa,CAACsH,GAAG,CAAC,CAAC7C,MAAgB,EAAEoH,KAAa,kBACjD5N,OAAA,CAACxB,QAAQ;cAEPmN,OAAO,EAAEA,CAAA,KAAMpF,sBAAsB,CAACC,MAAM,CAAE;cAC9CO,EAAE,EAAE;gBACF6E,MAAM,EAAE,SAAS;gBACjBX,EAAE,EAAE,GAAG;gBACPY,EAAE,EAAE,CAAC;gBACLjB,UAAU,EAAE,sBAAsB;gBAClCM,YAAY,EAAE,KAAK;gBACnB,SAAS,EAAE;kBACTV,eAAe,EAAE7L,KAAK,CAACqE,KAAK,CAACsH,OAAO,CAACwB,OAAO,CAACC,IAAI,EAAE,IAAI,CAAC;kBACxDlB,SAAS,EAAE;gBACb;cACF,CAAE;cAAA9G,QAAA,gBAEF/D,OAAA,CAACvB,YAAY;gBAACsI,EAAE,EAAE;kBAChBmF,QAAQ,EAAE,EAAE;kBACZC,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG;gBAC1B,CAAE;gBAAAoF,QAAA,EACCyC,MAAM,CAACrC,IAAI,KAAK,QAAQ,gBACvBnE,OAAA,CAACd,UAAU;kBAAC6H,EAAE,EAAE;oBAAEC,QAAQ,EAAE;kBAAG;gBAAE;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,gBAEpCpH,OAAA,CAACZ,mBAAmB;kBAAC2H,EAAE,EAAE;oBAAEC,QAAQ,EAAE;kBAAG;gBAAE;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAC7C;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACW,CAAC,eACfpH,OAAA,CAAC7B,GAAG;gBAAC4I,EAAE,EAAE;kBAAEoD,IAAI,EAAE;gBAAE,CAAE;gBAAApG,QAAA,gBACnB/D,OAAA,CAAC7B,GAAG;kBAAC4I,EAAE,EAAE;oBAAE0D,OAAO,EAAE,MAAM;oBAAE2B,UAAU,EAAE,QAAQ;oBAAEkC,GAAG,EAAE,CAAC;oBAAEK,EAAE,EAAE;kBAAI,CAAE;kBAAA5K,QAAA,gBAClE/D,OAAA,CAAC5B,UAAU;oBACT2I,EAAE,EAAE;sBACFC,QAAQ,EAAE,UAAU;sBACpBsF,UAAU,EAAE,GAAG;sBACfH,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,IAAI;oBAC3B,CAAE;oBAAAoF,QAAA,EAEDyC,MAAM,CAACpF;kBAAI;oBAAA6F,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACF,CAAC,EACZZ,MAAM,CAACuK,SAAS,iBACf/Q,OAAA,CAACjB,IAAI;oBACH8H,KAAK,EAAE,UAAUL,MAAM,CAACuK,SAAS,EAAG;oBACpC/B,IAAI,EAAC,OAAO;oBACZjI,EAAE,EAAE;sBACFwG,MAAM,EAAE,EAAE;sBACVvG,QAAQ,EAAE,UAAU;sBACpBsF,UAAU,EAAE,GAAG;sBACf9B,eAAe,EAAE7L,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC;sBACtCwN,KAAK,EAAE;oBACT;kBAAE;oBAAAlF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CACF,EACAZ,MAAM,CAACwK,UAAU,iBAChBhR,OAAA,CAACjB,IAAI;oBACH8H,KAAK,EAAE,WAAWL,MAAM,CAACwK,UAAU,EAAG;oBACtChC,IAAI,EAAC,OAAO;oBACZjI,EAAE,EAAE;sBACFwG,MAAM,EAAE,EAAE;sBACVvG,QAAQ,EAAE,UAAU;sBACpBsF,UAAU,EAAE,GAAG;sBACf9B,eAAe,EAAE7L,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC;sBACtCwN,KAAK,EAAE;oBACT;kBAAE;oBAAAlF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CACF,EACAZ,MAAM,CAACyK,OAAO,iBACbjR,OAAA,CAACjB,IAAI;oBACH8H,KAAK,EAAE,YAAYL,MAAM,CAACyK,OAAO,EAAG;oBACpCjC,IAAI,EAAC,OAAO;oBACZjI,EAAE,EAAE;sBACFwG,MAAM,EAAE,EAAE;sBACVvG,QAAQ,EAAE,UAAU;sBACpBsF,UAAU,EAAE,GAAG;sBACf9B,eAAe,EAAE7L,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC;sBACtCwN,KAAK,EAAE;oBACT;kBAAE;oBAAAlF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CACF;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC,eACNpH,OAAA,CAAC7B,GAAG;kBAAC4I,EAAE,EAAE;oBAAE0D,OAAO,EAAE,MAAM;oBAAE2B,UAAU,EAAE,QAAQ;oBAAEkC,GAAG,EAAE;kBAAE,CAAE;kBAAAvK,QAAA,eACzD/D,OAAA,CAAC5B,UAAU;oBACT2I,EAAE,EAAE;sBACFC,QAAQ,EAAE,SAAS;sBACnBmF,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC;sBACzB8L,OAAO,EAAE,MAAM;sBACf2B,UAAU,EAAE,QAAQ;sBACpBkC,GAAG,EAAE;oBACP,CAAE;oBAAAvK,QAAA,gBAEF/D,OAAA,CAACb,cAAc;sBAAC4H,EAAE,EAAE;wBAAEC,QAAQ,EAAE;sBAAG;oBAAE;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,EACvCrB,aAAa,CAACS,MAAM,EAAE1G,eAAe,CAACD,iBAAiB,CAACD,QAAQ,CAAC,CAAC,CAAC,CAACkI,IAAI,CAAC,KAAK,CAAC;kBAAA;oBAAAb,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA,GAzFDwG,KAAK;cAAA3G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA0FF,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,gBAEPpH,OAAA,CAAC7B,GAAG;YAAC4I,EAAE,EAAE;cACP2H,CAAC,EAAE,CAAC;cACJwC,SAAS,EAAE,QAAQ;cACnB/E,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG;YAC1B,CAAE;YAAAoF,QAAA,eACA/D,OAAA,CAAC5B,UAAU;cAACwQ,OAAO,EAAC,OAAO;cAAA7K,QAAA,GAAC,yBACJ,EAACpC,WAAW,EAAC,IACrC;YAAA;cAAAsF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CACN,gBAEDpH,OAAA,CAAC7B,GAAG;YAAC4I,EAAE,EAAE;cACP2H,CAAC,EAAE,CAAC;cACJwC,SAAS,EAAE,QAAQ;cACnB/E,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG;YAC1B,CAAE;YAAAoF,QAAA,eACA/D,OAAA,CAAC5B,UAAU;cAACwQ,OAAO,EAAC,OAAO;cAAA7K,QAAA,EAAC;YAE5B;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNpH,OAAA;MAAA+D,QAAA,EACG;AACT;AACA;AACA;AACA;AACA;AACA;IAAS;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAERpH,OAAA,CAAC7B,GAAG;MAAC4I,EAAE,EAAE;QACP2H,CAAC,EAAE,WAAW;QACdyC,UAAU,EAAE,CAAC;QACb3G,eAAe,EAAE,OAAO;QACxBwC,YAAY,EAAE,WAAW;QACzB3C,WAAW,EAAE1L,KAAK,CAACqE,KAAK,CAACsH,OAAO,CAACC,OAAO,EAAE,IAAI,CAAC;QAC/C0C,QAAQ,EAAE,QAAQ;QAClB6C,GAAG,EAAE,CAAC;QACNE,MAAM,EAAE;MACV,CAAE;MAAAjM,QAAA,eACA/D,OAAA,CAAC7B,GAAG;QAAC4I,EAAE,EAAE;UACP0D,OAAO,EAAE,MAAM;UACfwF,cAAc,EAAE,eAAe;UAC/B7D,UAAU,EAAE,QAAQ;UACpBlC,KAAK,EAAE;QACT,CAAE;QAAAnG,QAAA,gBACA/D,OAAA,CAACnB,iBAAiB;UAChByI,KAAK,EAAE7F,QAAS;UAChB2P,SAAS;UACTT,QAAQ,EAAElK,sBAAuB;UACjC,cAAW,iBAAiB;UAC5BM,EAAE,EAAE;YACFkJ,cAAc,EAAE,YAAY;YAC5B,yBAAyB,EAAE;cACzBvC,aAAa,EAAE,MAAM;cACrB7B,EAAE,EAAE,CAAC;cACLZ,EAAE,EAAE,CAAC;cACLmD,MAAM,EAAE,MAAM;cACdlD,YAAY,EAAE,KAAK;cACnBe,EAAE,EAAE,CAAC;cACLoF,EAAE,EAAE,CAAC;cACL,gBAAgB,EAAE;gBAChB7G,eAAe,EAAE7L,KAAK,CAACqE,KAAK,CAACsH,OAAO,CAACwB,OAAO,CAACC,IAAI,EAAE,IAAI,CAAC;gBACxDI,KAAK,EAAEnJ,KAAK,CAACsH,OAAO,CAACwB,OAAO,CAACC,IAAI;gBACjC,SAAS,EAAE;kBACTvB,eAAe,EAAE7L,KAAK,CAACqE,KAAK,CAACsH,OAAO,CAACwB,OAAO,CAACC,IAAI,EAAE,IAAI;gBACzD;cACF,CAAC;cACD,SAAS,EAAE;gBACTvB,eAAe,EAAE7L,KAAK,CAAC,MAAM,EAAE,IAAI;cACrC;YACF;UACF,CAAE;UAAAoF,QAAA,EAED6C,iBAAiB,CAACyC,GAAG,CAAC,CAACiI,MAAM,EAAE1D,KAAK,kBACnC5N,OAAA,CAAClB,YAAY;YAAawI,KAAK,EAAEsG,KAAM;YAAC,cAAY0D,MAAM,CAACzK,KAAM;YAAA9C,QAAA,eAC/D/D,OAAA,CAAC7B,GAAG;cAAC4I,EAAE,EAAE;gBAAE0D,OAAO,EAAE,MAAM;gBAAE2B,UAAU,EAAE,QAAQ;gBAAEkC,GAAG,EAAE;cAAE,CAAE;cAAAvK,QAAA,GACxDuN,MAAM,CAACxK,IAAI,eACZ9G,OAAA,CAAC5B,UAAU;gBAAC2I,EAAE,EAAE;kBAAEC,QAAQ,EAAE,UAAU;kBAAEsF,UAAU,EAAE;gBAAI,CAAE;gBAAAvI,QAAA,EACvDuN,MAAM,CAACzK;cAAK;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV;UAAC,GANWwG,KAAK;YAAA3G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOV,CACf;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACe,CAAC,eAEpBpH,OAAA,CAAC3B,SAAS;UACRqS,WAAW,EAAC,WAAW;UACvBpJ,KAAK,EAAE3F,WAAY;UACnBgP,QAAQ,EAAGN,CAAsC,IAAKzO,cAAc,CAACyO,CAAC,CAACO,MAAM,CAACtJ,KAAK,CAAE;UACrFqE,OAAO,EAAEA,CAAA,KAAM7J,mBAAmB,CAAC,IAAI,CAAE;UACzCkN,IAAI,EAAC,OAAO;UACZjI,EAAE,EAAE;YACFmD,KAAK,EAAE,OAAO;YACd,0BAA0B,EAAE;cAC1BgB,YAAY,EAAE,KAAK;cACnBV,eAAe,EAAE7L,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC;cACnC,YAAY,EAAE;gBACZ0L,WAAW,EAAE1L,KAAK,CAACqE,KAAK,CAACsH,OAAO,CAACC,OAAO,EAAE,GAAG;cAC/C,CAAC;cACD,kBAAkB,EAAE;gBAClBF,WAAW,EAAE1L,KAAK,CAACqE,KAAK,CAACsH,OAAO,CAACwB,OAAO,CAACC,IAAI,EAAE,GAAG;cACpD,CAAC;cACD,wBAAwB,EAAE;gBACxB1B,WAAW,EAAE1L,KAAK,CAACqE,KAAK,CAACsH,OAAO,CAACwB,OAAO,CAACC,IAAI,EAAE,GAAG;cACpD;YACF;UACF,CAAE;UACF8E,UAAU,EAAE;YACVC,cAAc,eACZ9Q,OAAA,CAACf,cAAc;cAACgO,QAAQ,EAAC,OAAO;cAAAlJ,QAAA,eAC9B/D,OAAA,CAACX,UAAU;gBAAC0H,EAAE,EAAE;kBAAEC,QAAQ,EAAE,EAAE;kBAAEmF,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG;gBAAE;cAAE;gBAAAsI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjD;UAEpB;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNpH,OAAA,CAAC7B,GAAG;MAAC4I,EAAE,EAAE;QACPoD,IAAI,EAAE,CAAC;QACPoH,SAAS,EAAE,CAAC;QACZ9G,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBuC,QAAQ,EAAE,UAAU;QACpByB,CAAC,EAAE,WAAW;QACdJ,GAAG,EAAE;MACP,CAAE;MAAAvK,QAAA,eACA/D,OAAA,CAAC7B,GAAG;QAAC4I,EAAE,EAAE;UAAE0D,OAAO,EAAE,MAAM;UAAE6D,GAAG,EAAE,CAAC;UAAEnE,IAAI,EAAE,CAAC;UAAEoH,SAAS,EAAE;QAAE,CAAE;QAAAxN,QAAA,gBAE1D/D,OAAA,CAAC7B,GAAG;UAAC4I,EAAE,EAAE;YACPoD,IAAI,EAAE,CAAC;YACPK,eAAe,EAAE,OAAO;YACxBG,QAAQ,EAAE,QAAQ;YAClBF,OAAO,EAAE,MAAM;YACfS,YAAY,EAAE,MAAM;YACpBmD,SAAS,EAAE,cAAc1P,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC;UAC9C,CAAE;UAAAoF,QAAA,eACA/D,OAAA,CAAC7B,GAAG;YACFwO,GAAG,EAAEjK,kBAAmB;YACxBqE,EAAE,EAAE;cACFoD,IAAI,EAAE,CAAC;cACPM,OAAO,EAAE,MAAM;cACfO,SAAS,EAAE,MAAM;cACjBwG,SAAS,EAAE,QAAQ;cACnBC,cAAc,EAAE,QAAQ;cACxB,sBAAsB,EAAE;gBAAElE,MAAM,EAAE;cAAE,CAAC;cACrC,4BAA4B,EAAE;gBAAE/C,eAAe,EAAE;cAAc,CAAC;cAChE,4BAA4B,EAAE;gBAC5BA,eAAe,EAAE7L,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC;gBACpCuM,YAAY,EAAE,CAAC;gBACf,SAAS,EAAE;kBAAEV,eAAe,EAAE7L,KAAK,CAAC,MAAM,EAAE,IAAI;gBAAE;cACpD;YACF,CAAE;YAAAoF,QAAA,GAED7B,OAAO,CAACmH,GAAG,CAAC,CAACY,MAAkB,EAAE2D,KAAa,KAAK5D,YAAY,CAACC,MAAM,EAAE2D,KAAK,CAAC,CAAC,EAC/E1L,OAAO,CAACgC,MAAM,KAAK,CAAC,iBACnBlE,OAAA,CAAC7B,GAAG;cACF4I,EAAE,EAAE;gBACFmD,KAAK,EAAE,MAAM;gBACbO,OAAO,EAAE,MAAM;gBACf2B,UAAU,EAAE,QAAQ;gBACpB6D,cAAc,EAAE,QAAQ;gBACxBzF,eAAe,EAAE7L,KAAK,CAACqE,KAAK,CAACsH,OAAO,CAACkD,UAAU,CAACkE,KAAK,EAAE,GAAG,CAAC;gBAC3DvF,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC;gBACzB+L,aAAa,EAAE,QAAQ;gBACvB4D,GAAG,EAAE,GAAG;gBACRI,CAAC,EAAE;cACL,CAAE;cAAA3K,QAAA,gBAEF/D,OAAA,CAACd,UAAU;gBAAC6H,EAAE,EAAE;kBAAEC,QAAQ,EAAE,EAAE;kBAAEmF,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,IAAI;gBAAE;cAAE;gBAAAsI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAChEpH,OAAA,CAAC5B,UAAU;gBAACwQ,OAAO,EAAC,IAAI;gBAAC7H,EAAE,EAAE;kBAC3BoF,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC;kBACzB2N,UAAU,EAAE;gBACd,CAAE;gBAAAvI,QAAA,EAAC;cAEH;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACbpH,OAAA,CAAC5B,UAAU;gBAACwQ,OAAO,EAAC,OAAO;gBAAC+C,KAAK,EAAC,QAAQ;gBAAC5K,EAAE,EAAE;kBAC7CoJ,QAAQ,EAAE,GAAG;kBACbhE,KAAK,EAAExN,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC;kBACzBqI,QAAQ,EAAE,UAAU;kBACpBuF,UAAU,EAAE;gBACd,CAAE;gBAAAxI,QAAA,EAAC;cAEH;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAGLmH,kBAAkB,CAAC,CAAC;MAAA;QAAAtH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5F,EAAA,CAl2CID,UAAoB;EAAA,QAcP7B,WAAW,EACLC,eAAe,EACxBF,QAAQ;AAAA;AAAAmS,EAAA,GAhBlBrQ,UAAoB;AAo2C1B,eAAeA,UAAU;AAAC,IAAAqQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}